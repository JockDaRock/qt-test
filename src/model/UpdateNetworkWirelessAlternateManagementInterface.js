/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 September, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/NetworksnetworkIdwirelessalternateManagementInterfaceAccessPoints'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./NetworksnetworkIdwirelessalternateManagementInterfaceAccessPoints'));
  } else {
    // Browser globals (root is window)
    if (!root.MerakiDashboardApi) {
      root.MerakiDashboardApi = {};
    }
    root.MerakiDashboardApi.UpdateNetworkWirelessAlternateManagementInterface = factory(root.MerakiDashboardApi.ApiClient, root.MerakiDashboardApi.NetworksnetworkIdwirelessalternateManagementInterfaceAccessPoints);
  }
}(this, function(ApiClient, NetworksnetworkIdwirelessalternateManagementInterfaceAccessPoints) {
  'use strict';

  /**
   * The UpdateNetworkWirelessAlternateManagementInterface model module.
   * @module model/UpdateNetworkWirelessAlternateManagementInterface
   * @version 1.1.0
   */

  /**
   * Constructs a new <code>UpdateNetworkWirelessAlternateManagementInterface</code>.
   * @alias module:model/UpdateNetworkWirelessAlternateManagementInterface
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>UpdateNetworkWirelessAlternateManagementInterface</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UpdateNetworkWirelessAlternateManagementInterface} obj Optional instance to populate.
   * @return {module:model/UpdateNetworkWirelessAlternateManagementInterface} The populated <code>UpdateNetworkWirelessAlternateManagementInterface</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('enabled'))
        obj.enabled = ApiClient.convertToType(data['enabled'], 'Boolean');
      if (data.hasOwnProperty('vlanId'))
        obj.vlanId = ApiClient.convertToType(data['vlanId'], 'Number');
      if (data.hasOwnProperty('protocols'))
        obj.protocols = ApiClient.convertToType(data['protocols'], ['String']);
      if (data.hasOwnProperty('accessPoints'))
        obj.accessPoints = ApiClient.convertToType(data['accessPoints'], [NetworksnetworkIdwirelessalternateManagementInterfaceAccessPoints]);
    }
    return obj;
  }

  /**
   * Boolean value to enable or disable alternate management interface
   * @member {Boolean} enabled
   */
  exports.prototype.enabled = undefined;

  /**
   * Alternate management interface VLAN, must be between 1 and 4094
   * @member {Number} vlanId
   */
  exports.prototype.vlanId = undefined;

  /**
   * Can be one or more of the following values: 'radius', 'snmp', 'syslog' or 'ldap'
   * @member {Array.<module:model/UpdateNetworkWirelessAlternateManagementInterface.ProtocolsEnum>} protocols
   */
  exports.prototype.protocols = undefined;

  /**
   * Array of access point serial number and IP assignment. Note: accessPoints IP assignment is not applicable for template networks, in other words, do not put 'accessPoints' in the body when updating template networks. Also, an empty 'accessPoints' array will remove all previous static IP assignments
   * @member {Array.<module:model/NetworksnetworkIdwirelessalternateManagementInterfaceAccessPoints>} accessPoints
   */
  exports.prototype.accessPoints = undefined;


  /**
   * Allowed values for the <code>protocols</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ProtocolsEnum = {
    /**
     * value: "radius"
     * @const
     */
    radius: "radius",

    /**
     * value: "snmp"
     * @const
     */
    snmp: "snmp",

    /**
     * value: "syslog"
     * @const
     */
    syslog: "syslog",

    /**
     * value: "ldap"
     * @const
     */
    ldap: "ldap"
  };

  return exports;

}));
