/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 September, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.MerakiDashboardApi) {
      root.MerakiDashboardApi = {};
    }
    root.MerakiDashboardApi.NetworksnetworkIdappliancefirewalll7FirewallRulesRules = factory(root.MerakiDashboardApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The NetworksnetworkIdappliancefirewalll7FirewallRulesRules model module.
   * @module model/NetworksnetworkIdappliancefirewalll7FirewallRulesRules
   * @version 1.1.0
   */

  /**
   * Constructs a new <code>NetworksnetworkIdappliancefirewalll7FirewallRulesRules</code>.
   * @alias module:model/NetworksnetworkIdappliancefirewalll7FirewallRulesRules
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>NetworksnetworkIdappliancefirewalll7FirewallRulesRules</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/NetworksnetworkIdappliancefirewalll7FirewallRulesRules} obj Optional instance to populate.
   * @return {module:model/NetworksnetworkIdappliancefirewalll7FirewallRulesRules} The populated <code>NetworksnetworkIdappliancefirewalll7FirewallRulesRules</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('policy'))
        obj.policy = ApiClient.convertToType(data['policy'], 'String');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('value'))
        obj.value = ApiClient.convertToType(data['value'], 'String');
    }
    return obj;
  }

  /**
   * 'Deny' traffic specified by this rule
   * @member {module:model/NetworksnetworkIdappliancefirewalll7FirewallRulesRules.PolicyEnum} policy
   */
  exports.prototype.policy = undefined;

  /**
   * Type of the L7 rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'
   * @member {module:model/NetworksnetworkIdappliancefirewalll7FirewallRulesRules.TypeEnum} type
   */
  exports.prototype.type = undefined;

  /**
   * The 'value' of what you want to block. Format of 'value' varies depending on type of the rule. See sample request. The application categories and application ids can be retrieved from the the 'MX L7 application categories' endpoint. The countries follow the two-letter ISO 3166-1 alpha-2 format.
   * @member {String} value
   */
  exports.prototype.value = undefined;


  /**
   * Allowed values for the <code>policy</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PolicyEnum = {
    /**
     * value: "deny"
     * @const
     */
    deny: "deny"
  };


  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "application"
     * @const
     */
    application: "application",

    /**
     * value: "applicationCategory"
     * @const
     */
    applicationCategory: "applicationCategory",

    /**
     * value: "host"
     * @const
     */
    host: "host",

    /**
     * value: "port"
     * @const
     */
    port: "port",

    /**
     * value: "ipRange"
     * @const
     */
    ipRange: "ipRange"
  };

  return exports;

}));
