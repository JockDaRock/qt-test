/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 August, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The Body15 model module.
* @module model/Body15
* @version 1.0.0
*/
export default class Body15 {
    /**
    * Constructs a new <code>Body15</code>.
    * @alias module:model/Body15
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>Body15</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Body15} obj Optional instance to populate.
    * @return {module:model/Body15} The populated <code>Body15</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Body15();
                        
            
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('subnet')) {
                obj['subnet'] = ApiClient.convertToType(data['subnet'], 'String');
            }
            if (data.hasOwnProperty('nextHopIp')) {
                obj['nextHopIp'] = ApiClient.convertToType(data['nextHopIp'], 'String');
            }
            if (data.hasOwnProperty('advertiseViaOspfEnabled')) {
                obj['advertiseViaOspfEnabled'] = ApiClient.convertToType(data['advertiseViaOspfEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('preferOverOspfRoutesEnabled')) {
                obj['preferOverOspfRoutesEnabled'] = ApiClient.convertToType(data['preferOverOspfRoutesEnabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
    * Name or description for layer 3 static route
    * @member {String} name
    */
    'name' = undefined;
    /**
    * The subnet which is routed via this static route and should be specified in CIDR notation (ex. 1.2.3.0/24)
    * @member {String} subnet
    */
    'subnet' = undefined;
    /**
    * IP address of the next hop device to which the device sends its traffic for the subnet
    * @member {String} nextHopIp
    */
    'nextHopIp' = undefined;
    /**
    * Option to advertise static route via OSPF
    * @member {Boolean} advertiseViaOspfEnabled
    */
    'advertiseViaOspfEnabled' = undefined;
    /**
    * Option to prefer static route over OSPF routes
    * @member {Boolean} preferOverOspfRoutesEnabled
    */
    'preferOverOspfRoutesEnabled' = undefined;




}
