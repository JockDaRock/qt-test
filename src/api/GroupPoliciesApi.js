/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 September, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CreateNetworkGroupPolicy', 'model/UpdateNetworkGroupPolicy'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/CreateNetworkGroupPolicy'), require('../model/UpdateNetworkGroupPolicy'));
  } else {
    // Browser globals (root is window)
    if (!root.MerakiDashboardApi) {
      root.MerakiDashboardApi = {};
    }
    root.MerakiDashboardApi.GroupPoliciesApi = factory(root.MerakiDashboardApi.ApiClient, root.MerakiDashboardApi.CreateNetworkGroupPolicy, root.MerakiDashboardApi.UpdateNetworkGroupPolicy);
  }
}(this, function(ApiClient, CreateNetworkGroupPolicy, UpdateNetworkGroupPolicy) {
  'use strict';

  /**
   * GroupPolicies service.
   * @module api/GroupPoliciesApi
   * @version 1.1.0
   */

  /**
   * Constructs a new GroupPoliciesApi. 
   * @alias module:api/GroupPoliciesApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createNetworkGroupPolicy operation.
     * @callback module:api/GroupPoliciesApi~createNetworkGroupPolicyCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a group policy
     * Create a group policy
     * @param {String} networkId 
     * @param {module:model/CreateNetworkGroupPolicy} createNetworkGroupPolicy 
     * @param {module:api/GroupPoliciesApi~createNetworkGroupPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.createNetworkGroupPolicy = function(networkId, createNetworkGroupPolicy, callback) {
      var postBody = createNetworkGroupPolicy;

      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling createNetworkGroupPolicy");
      }

      // verify the required parameter 'createNetworkGroupPolicy' is set
      if (createNetworkGroupPolicy === undefined || createNetworkGroupPolicy === null) {
        throw new Error("Missing the required parameter 'createNetworkGroupPolicy' when calling createNetworkGroupPolicy");
      }


      var pathParams = {
        'networkId': networkId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['meraki_api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/groupPolicies', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteNetworkGroupPolicy operation.
     * @callback module:api/GroupPoliciesApi~deleteNetworkGroupPolicyCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a group policy
     * Delete a group policy
     * @param {String} networkId 
     * @param {String} groupPolicyId 
     * @param {module:api/GroupPoliciesApi~deleteNetworkGroupPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteNetworkGroupPolicy = function(networkId, groupPolicyId, callback) {
      var postBody = null;

      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling deleteNetworkGroupPolicy");
      }

      // verify the required parameter 'groupPolicyId' is set
      if (groupPolicyId === undefined || groupPolicyId === null) {
        throw new Error("Missing the required parameter 'groupPolicyId' when calling deleteNetworkGroupPolicy");
      }


      var pathParams = {
        'networkId': networkId,
        'groupPolicyId': groupPolicyId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['meraki_api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/networks/{networkId}/groupPolicies/{groupPolicyId}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkGroupPolicies operation.
     * @callback module:api/GroupPoliciesApi~getNetworkGroupPoliciesCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the group policies in a network
     * List the group policies in a network
     * @param {String} networkId 
     * @param {module:api/GroupPoliciesApi~getNetworkGroupPoliciesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.getNetworkGroupPolicies = function(networkId, callback) {
      var postBody = null;

      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkGroupPolicies");
      }


      var pathParams = {
        'networkId': networkId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['meraki_api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/groupPolicies', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkGroupPolicy operation.
     * @callback module:api/GroupPoliciesApi~getNetworkGroupPolicyCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Display a group policy
     * Display a group policy
     * @param {String} networkId 
     * @param {String} groupPolicyId 
     * @param {module:api/GroupPoliciesApi~getNetworkGroupPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.getNetworkGroupPolicy = function(networkId, groupPolicyId, callback) {
      var postBody = null;

      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkGroupPolicy");
      }

      // verify the required parameter 'groupPolicyId' is set
      if (groupPolicyId === undefined || groupPolicyId === null) {
        throw new Error("Missing the required parameter 'groupPolicyId' when calling getNetworkGroupPolicy");
      }


      var pathParams = {
        'networkId': networkId,
        'groupPolicyId': groupPolicyId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['meraki_api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/groupPolicies/{groupPolicyId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkGroupPolicy operation.
     * @callback module:api/GroupPoliciesApi~updateNetworkGroupPolicyCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a group policy
     * Update a group policy
     * @param {String} networkId 
     * @param {String} groupPolicyId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkGroupPolicy} opts.updateNetworkGroupPolicy 
     * @param {module:api/GroupPoliciesApi~updateNetworkGroupPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.updateNetworkGroupPolicy = function(networkId, groupPolicyId, opts, callback) {
      opts = opts || {};
      var postBody = opts['updateNetworkGroupPolicy'];

      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkGroupPolicy");
      }

      // verify the required parameter 'groupPolicyId' is set
      if (groupPolicyId === undefined || groupPolicyId === null) {
        throw new Error("Missing the required parameter 'groupPolicyId' when calling updateNetworkGroupPolicy");
      }


      var pathParams = {
        'networkId': networkId,
        'groupPolicyId': groupPolicyId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['meraki_api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/groupPolicies/{groupPolicyId}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
