/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 September, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.MerakiDashboardApi) {
      root.MerakiDashboardApi = {};
    }
    root.MerakiDashboardApi.UpdateNetworkApplianceFirewallFirewalledService = factory(root.MerakiDashboardApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The UpdateNetworkApplianceFirewallFirewalledService model module.
   * @module model/UpdateNetworkApplianceFirewallFirewalledService
   * @version 1.1.0
   */

  /**
   * Constructs a new <code>UpdateNetworkApplianceFirewallFirewalledService</code>.
   * @alias module:model/UpdateNetworkApplianceFirewallFirewalledService
   * @class
   * @param access {module:model/UpdateNetworkApplianceFirewallFirewalledService.AccessEnum} A string indicating the rule for which IPs are allowed to use the specified service. Acceptable values are \"blocked\" (no remote IPs can access the service), \"restricted\" (only allowed IPs can access the service), and \"unrestriced\" (any remote IP can access the service). This field is required
   */
  var exports = function(access) {
    this.access = access;
  };

  /**
   * Constructs a <code>UpdateNetworkApplianceFirewallFirewalledService</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UpdateNetworkApplianceFirewallFirewalledService} obj Optional instance to populate.
   * @return {module:model/UpdateNetworkApplianceFirewallFirewalledService} The populated <code>UpdateNetworkApplianceFirewallFirewalledService</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('access'))
        obj.access = ApiClient.convertToType(data['access'], 'String');
      if (data.hasOwnProperty('allowedIps'))
        obj.allowedIps = ApiClient.convertToType(data['allowedIps'], ['String']);
    }
    return obj;
  }

  /**
   * A string indicating the rule for which IPs are allowed to use the specified service. Acceptable values are \"blocked\" (no remote IPs can access the service), \"restricted\" (only allowed IPs can access the service), and \"unrestriced\" (any remote IP can access the service). This field is required
   * @member {module:model/UpdateNetworkApplianceFirewallFirewalledService.AccessEnum} access
   */
  exports.prototype.access = undefined;

  /**
   * An array of allowed IPs that can access the service. This field is required if \"access\" is set to \"restricted\". Otherwise this field is ignored
   * @member {Array.<String>} allowedIps
   */
  exports.prototype.allowedIps = undefined;


  /**
   * Allowed values for the <code>access</code> property.
   * @enum {String}
   * @readonly
   */
  exports.AccessEnum = {
    /**
     * value: "blocked"
     * @const
     */
    blocked: "blocked",

    /**
     * value: "restricted"
     * @const
     */
    restricted: "restricted",

    /**
     * value: "unrestricted"
     * @const
     */
    unrestricted: "unrestricted"
  };

  return exports;

}));
