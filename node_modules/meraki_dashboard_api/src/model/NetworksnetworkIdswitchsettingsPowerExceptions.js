/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 August, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The NetworksnetworkIdswitchsettingsPowerExceptions model module.
* @module model/NetworksnetworkIdswitchsettingsPowerExceptions
* @version 1.0.0
*/
export default class NetworksnetworkIdswitchsettingsPowerExceptions {
    /**
    * Constructs a new <code>NetworksnetworkIdswitchsettingsPowerExceptions</code>.
    * @alias module:model/NetworksnetworkIdswitchsettingsPowerExceptions
    * @class
    * @param serial {String} Serial number of the switch
    * @param powerType {module:model/NetworksnetworkIdswitchsettingsPowerExceptions.PowerTypeEnum} Per switch exception (combined, redundant, useNetworkSetting)
    */

    constructor(serial, powerType) {
        
        
        this['serial'] = serial;
        this['powerType'] = powerType;
        
    }

    /**
    * Constructs a <code>NetworksnetworkIdswitchsettingsPowerExceptions</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/NetworksnetworkIdswitchsettingsPowerExceptions} obj Optional instance to populate.
    * @return {module:model/NetworksnetworkIdswitchsettingsPowerExceptions} The populated <code>NetworksnetworkIdswitchsettingsPowerExceptions</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworksnetworkIdswitchsettingsPowerExceptions();
                        
            
            if (data.hasOwnProperty('serial')) {
                obj['serial'] = ApiClient.convertToType(data['serial'], 'String');
            }
            if (data.hasOwnProperty('powerType')) {
                obj['powerType'] = ApiClient.convertToType(data['powerType'], 'String');
            }
        }
        return obj;
    }

    /**
    * Serial number of the switch
    * @member {String} serial
    */
    'serial' = undefined;
    /**
    * Per switch exception (combined, redundant, useNetworkSetting)
    * @member {module:model/NetworksnetworkIdswitchsettingsPowerExceptions.PowerTypeEnum} powerType
    */
    'powerType' = undefined;



    /**
    * Allowed values for the <code>powerType</code> property.
    * @enum {String}
    * @readonly
    */
    static PowerTypeEnum = {
        /**
         * value: "combined"
         * @const
         */
        "combined": "combined",
        /**
         * value: "redundant"
         * @const
         */
        "redundant": "redundant",
        /**
         * value: "useNetworkSetting"
         * @const
         */
        "useNetworkSetting": "useNetworkSetting"    };

}
