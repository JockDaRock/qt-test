/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 August, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import Body11 from '../model/Body11';
import Body12 from '../model/Body12';
import Body13 from '../model/Body13';
import Body96 from '../model/Body96';
import Body97 from '../model/Body97';
import Body98 from '../model/Body98';

/**
* Interfaces service.
* @module api/InterfacesApi
* @version 1.0.0
*/
export default class InterfacesApi {

    /**
    * Constructs a new InterfacesApi. 
    * @alias module:api/InterfacesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the createDeviceSwitchRoutingInterface operation.
     * @callback module:api/InterfacesApi~createDeviceSwitchRoutingInterfaceCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a layer 3 interface for a switch
     * Create a layer 3 interface for a switch
     * @param {module:api/InterfacesApi~createDeviceSwitchRoutingInterfaceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createDeviceSwitchRoutingInterface(body, serial, callback) {
      let postBody = body;

      let pathParams = {
        'serial': serial
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;

      return this.apiClient.callApi(
        '/devices/{serial}/switch/routing/interfaces', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the createNetworkSwitchStackRoutingInterface operation.
     * @callback module:api/InterfacesApi~createNetworkSwitchStackRoutingInterfaceCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a layer 3 interface for a switch stack
     * Create a layer 3 interface for a switch stack
     * @param {module:api/InterfacesApi~createNetworkSwitchStackRoutingInterfaceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createNetworkSwitchStackRoutingInterface(body, networkId, switchStackId, callback) {
      let postBody = body;

      let pathParams = {
        'networkId': networkId,
        'switchStackId': switchStackId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the deleteDeviceSwitchRoutingInterface operation.
     * @callback module:api/InterfacesApi~deleteDeviceSwitchRoutingInterfaceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a layer 3 interface from the switch
     * Delete a layer 3 interface from the switch
     * @param {module:api/InterfacesApi~deleteDeviceSwitchRoutingInterfaceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteDeviceSwitchRoutingInterface(serial, interfaceId, callback) {
      let postBody = null;

      let pathParams = {
        'serial': serial,
        'interfaceId': interfaceId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/devices/{serial}/switch/routing/interfaces/{interfaceId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the deleteNetworkSwitchStackRoutingInterface operation.
     * @callback module:api/InterfacesApi~deleteNetworkSwitchStackRoutingInterfaceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a layer 3 interface from a switch stack
     * Delete a layer 3 interface from a switch stack
     * @param {module:api/InterfacesApi~deleteNetworkSwitchStackRoutingInterfaceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteNetworkSwitchStackRoutingInterface(networkId, switchStackId, interfaceId, callback) {
      let postBody = null;

      let pathParams = {
        'networkId': networkId,
        'switchStackId': switchStackId,
        'interfaceId': interfaceId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getDeviceSwitchRoutingInterface operation.
     * @callback module:api/InterfacesApi~getDeviceSwitchRoutingInterfaceCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a layer 3 interface for a switch
     * Return a layer 3 interface for a switch
     * @param {module:api/InterfacesApi~getDeviceSwitchRoutingInterfaceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getDeviceSwitchRoutingInterface(serial, interfaceId, callback) {
      let postBody = null;

      let pathParams = {
        'serial': serial,
        'interfaceId': interfaceId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;

      return this.apiClient.callApi(
        '/devices/{serial}/switch/routing/interfaces/{interfaceId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getDeviceSwitchRoutingInterfaceDhcp operation.
     * @callback module:api/InterfacesApi~getDeviceSwitchRoutingInterfaceDhcpCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a layer 3 interface DHCP configuration for a switch
     * Return a layer 3 interface DHCP configuration for a switch
     * @param {module:api/InterfacesApi~getDeviceSwitchRoutingInterfaceDhcpCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getDeviceSwitchRoutingInterfaceDhcp(serial, interfaceId, callback) {
      let postBody = null;

      let pathParams = {
        'serial': serial,
        'interfaceId': interfaceId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;

      return this.apiClient.callApi(
        '/devices/{serial}/switch/routing/interfaces/{interfaceId}/dhcp', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getDeviceSwitchRoutingInterfaces operation.
     * @callback module:api/InterfacesApi~getDeviceSwitchRoutingInterfacesCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List layer 3 interfaces for a switch
     * List layer 3 interfaces for a switch
     * @param {module:api/InterfacesApi~getDeviceSwitchRoutingInterfacesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getDeviceSwitchRoutingInterfaces(serial, callback) {
      let postBody = null;

      let pathParams = {
        'serial': serial
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;

      return this.apiClient.callApi(
        '/devices/{serial}/switch/routing/interfaces', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getNetworkSwitchStackRoutingInterface operation.
     * @callback module:api/InterfacesApi~getNetworkSwitchStackRoutingInterfaceCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a layer 3 interface from a switch stack
     * Return a layer 3 interface from a switch stack
     * @param {module:api/InterfacesApi~getNetworkSwitchStackRoutingInterfaceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkSwitchStackRoutingInterface(networkId, switchStackId, interfaceId, callback) {
      let postBody = null;

      let pathParams = {
        'networkId': networkId,
        'switchStackId': switchStackId,
        'interfaceId': interfaceId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getNetworkSwitchStackRoutingInterfaceDhcp operation.
     * @callback module:api/InterfacesApi~getNetworkSwitchStackRoutingInterfaceDhcpCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a layer 3 interface DHCP configuration for a switch stack
     * Return a layer 3 interface DHCP configuration for a switch stack
     * @param {module:api/InterfacesApi~getNetworkSwitchStackRoutingInterfaceDhcpCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkSwitchStackRoutingInterfaceDhcp(networkId, switchStackId, interfaceId, callback) {
      let postBody = null;

      let pathParams = {
        'networkId': networkId,
        'switchStackId': switchStackId,
        'interfaceId': interfaceId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}/dhcp', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getNetworkSwitchStackRoutingInterfaces operation.
     * @callback module:api/InterfacesApi~getNetworkSwitchStackRoutingInterfacesCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List layer 3 interfaces for a switch stack
     * List layer 3 interfaces for a switch stack
     * @param {module:api/InterfacesApi~getNetworkSwitchStackRoutingInterfacesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkSwitchStackRoutingInterfaces(networkId, switchStackId, callback) {
      let postBody = null;

      let pathParams = {
        'networkId': networkId,
        'switchStackId': switchStackId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the updateDeviceSwitchRoutingInterface operation.
     * @callback module:api/InterfacesApi~updateDeviceSwitchRoutingInterfaceCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a layer 3 interface for a switch
     * Update a layer 3 interface for a switch
     * @param {Object} opts Optional parameters
     * @param {module:api/InterfacesApi~updateDeviceSwitchRoutingInterfaceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateDeviceSwitchRoutingInterface(serial, interfaceId, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        'serial': serial,
        'interfaceId': interfaceId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;

      return this.apiClient.callApi(
        '/devices/{serial}/switch/routing/interfaces/{interfaceId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the updateDeviceSwitchRoutingInterfaceDhcp operation.
     * @callback module:api/InterfacesApi~updateDeviceSwitchRoutingInterfaceDhcpCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a layer 3 interface DHCP configuration for a switch
     * Update a layer 3 interface DHCP configuration for a switch
     * @param {Object} opts Optional parameters
     * @param {module:api/InterfacesApi~updateDeviceSwitchRoutingInterfaceDhcpCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateDeviceSwitchRoutingInterfaceDhcp(serial, interfaceId, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        'serial': serial,
        'interfaceId': interfaceId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;

      return this.apiClient.callApi(
        '/devices/{serial}/switch/routing/interfaces/{interfaceId}/dhcp', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the updateNetworkSwitchStackRoutingInterface operation.
     * @callback module:api/InterfacesApi~updateNetworkSwitchStackRoutingInterfaceCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a layer 3 interface for a switch stack
     * Update a layer 3 interface for a switch stack
     * @param {Object} opts Optional parameters
     * @param {module:api/InterfacesApi~updateNetworkSwitchStackRoutingInterfaceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateNetworkSwitchStackRoutingInterface(networkId, switchStackId, interfaceId, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        'networkId': networkId,
        'switchStackId': switchStackId,
        'interfaceId': interfaceId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the updateNetworkSwitchStackRoutingInterfaceDhcp operation.
     * @callback module:api/InterfacesApi~updateNetworkSwitchStackRoutingInterfaceDhcpCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a layer 3 interface DHCP configuration for a switch stack
     * Update a layer 3 interface DHCP configuration for a switch stack
     * @param {Object} opts Optional parameters
     * @param {module:api/InterfacesApi~updateNetworkSwitchStackRoutingInterfaceDhcpCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateNetworkSwitchStackRoutingInterfaceDhcp(networkId, switchStackId, interfaceId, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        'networkId': networkId,
        'switchStackId': switchStackId,
        'interfaceId': interfaceId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}/dhcp', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
