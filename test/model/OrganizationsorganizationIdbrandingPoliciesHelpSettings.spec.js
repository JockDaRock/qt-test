/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 September, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MerakiDashboardApi);
  }
}(this, function(expect, MerakiDashboardApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('OrganizationsorganizationIdbrandingPoliciesHelpSettings', function() {
      beforeEach(function() {
        instance = new MerakiDashboardApi.OrganizationsorganizationIdbrandingPoliciesHelpSettings();
      });

      it('should create an instance of OrganizationsorganizationIdbrandingPoliciesHelpSettings', function() {
        // TODO: update the code to test OrganizationsorganizationIdbrandingPoliciesHelpSettings
        expect(instance).to.be.a(MerakiDashboardApi.OrganizationsorganizationIdbrandingPoliciesHelpSettings);
      });

      it('should have the property helpTab (base name: "helpTab")', function() {
        // TODO: update the code to test the property helpTab
        expect(instance).to.have.property('helpTab');
        // expect(instance.helpTab).to.be(expectedValueLiteral);
      });

      it('should have the property getHelpSubtab (base name: "getHelpSubtab")', function() {
        // TODO: update the code to test the property getHelpSubtab
        expect(instance).to.have.property('getHelpSubtab');
        // expect(instance.getHelpSubtab).to.be(expectedValueLiteral);
      });

      it('should have the property communitySubtab (base name: "communitySubtab")', function() {
        // TODO: update the code to test the property communitySubtab
        expect(instance).to.have.property('communitySubtab');
        // expect(instance.communitySubtab).to.be(expectedValueLiteral);
      });

      it('should have the property casesSubtab (base name: "casesSubtab")', function() {
        // TODO: update the code to test the property casesSubtab
        expect(instance).to.have.property('casesSubtab');
        // expect(instance.casesSubtab).to.be(expectedValueLiteral);
      });

      it('should have the property dataProtectionRequestsSubtab (base name: "dataProtectionRequestsSubtab")', function() {
        // TODO: update the code to test the property dataProtectionRequestsSubtab
        expect(instance).to.have.property('dataProtectionRequestsSubtab');
        // expect(instance.dataProtectionRequestsSubtab).to.be(expectedValueLiteral);
      });

      it('should have the property getHelpSubtabKnowledgeBaseSearch (base name: "getHelpSubtabKnowledgeBaseSearch")', function() {
        // TODO: update the code to test the property getHelpSubtabKnowledgeBaseSearch
        expect(instance).to.have.property('getHelpSubtabKnowledgeBaseSearch');
        // expect(instance.getHelpSubtabKnowledgeBaseSearch).to.be(expectedValueLiteral);
      });

      it('should have the property universalSearchKnowledgeBaseSearch (base name: "universalSearchKnowledgeBaseSearch")', function() {
        // TODO: update the code to test the property universalSearchKnowledgeBaseSearch
        expect(instance).to.have.property('universalSearchKnowledgeBaseSearch');
        // expect(instance.universalSearchKnowledgeBaseSearch).to.be(expectedValueLiteral);
      });

      it('should have the property ciscoMerakiProductDocumentation (base name: "ciscoMerakiProductDocumentation")', function() {
        // TODO: update the code to test the property ciscoMerakiProductDocumentation
        expect(instance).to.have.property('ciscoMerakiProductDocumentation');
        // expect(instance.ciscoMerakiProductDocumentation).to.be(expectedValueLiteral);
      });

      it('should have the property supportContactInfo (base name: "supportContactInfo")', function() {
        // TODO: update the code to test the property supportContactInfo
        expect(instance).to.have.property('supportContactInfo');
        // expect(instance.supportContactInfo).to.be(expectedValueLiteral);
      });

      it('should have the property newFeaturesSubtab (base name: "newFeaturesSubtab")', function() {
        // TODO: update the code to test the property newFeaturesSubtab
        expect(instance).to.have.property('newFeaturesSubtab');
        // expect(instance.newFeaturesSubtab).to.be(expectedValueLiteral);
      });

      it('should have the property firewallInfoSubtab (base name: "firewallInfoSubtab")', function() {
        // TODO: update the code to test the property firewallInfoSubtab
        expect(instance).to.have.property('firewallInfoSubtab');
        // expect(instance.firewallInfoSubtab).to.be(expectedValueLiteral);
      });

      it('should have the property apiDocsSubtab (base name: "apiDocsSubtab")', function() {
        // TODO: update the code to test the property apiDocsSubtab
        expect(instance).to.have.property('apiDocsSubtab');
        // expect(instance.apiDocsSubtab).to.be(expectedValueLiteral);
      });

      it('should have the property hardwareReplacementsSubtab (base name: "hardwareReplacementsSubtab")', function() {
        // TODO: update the code to test the property hardwareReplacementsSubtab
        expect(instance).to.have.property('hardwareReplacementsSubtab');
        // expect(instance.hardwareReplacementsSubtab).to.be(expectedValueLiteral);
      });

      it('should have the property smForums (base name: "smForums")', function() {
        // TODO: update the code to test the property smForums
        expect(instance).to.have.property('smForums');
        // expect(instance.smForums).to.be(expectedValueLiteral);
      });

    });
  });

}));
