/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 August, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The DevicesserialcellularGatewayportForwardingRulesRules model module.
* @module model/DevicesserialcellularGatewayportForwardingRulesRules
* @version 1.0.0
*/
export default class DevicesserialcellularGatewayportForwardingRulesRules {
    /**
    * Constructs a new <code>DevicesserialcellularGatewayportForwardingRulesRules</code>.
    * @alias module:model/DevicesserialcellularGatewayportForwardingRulesRules
    * @class
    * @param lanIp {String} The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN
    * @param publicPort {String} A port or port ranges that will be forwarded to the host on the LAN
    * @param localPort {String} A port or port ranges that will receive the forwarded traffic from the WAN
    * @param protocol {String} TCP or UDP
    * @param access {String} `any` or `restricted`. Specify the right to make inbound connections on the specified ports or port ranges. If `restricted`, a list of allowed IPs is mandatory.
    */

    constructor(lanIp, publicPort, localPort, protocol, access) {
        
        
        this['lanIp'] = lanIp;
        this['publicPort'] = publicPort;
        this['localPort'] = localPort;
        this['protocol'] = protocol;
        this['access'] = access;
        
    }

    /**
    * Constructs a <code>DevicesserialcellularGatewayportForwardingRulesRules</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/DevicesserialcellularGatewayportForwardingRulesRules} obj Optional instance to populate.
    * @return {module:model/DevicesserialcellularGatewayportForwardingRulesRules} The populated <code>DevicesserialcellularGatewayportForwardingRulesRules</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DevicesserialcellularGatewayportForwardingRulesRules();
                        
            
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('lanIp')) {
                obj['lanIp'] = ApiClient.convertToType(data['lanIp'], 'String');
            }
            if (data.hasOwnProperty('publicPort')) {
                obj['publicPort'] = ApiClient.convertToType(data['publicPort'], 'String');
            }
            if (data.hasOwnProperty('localPort')) {
                obj['localPort'] = ApiClient.convertToType(data['localPort'], 'String');
            }
            if (data.hasOwnProperty('allowedIps')) {
                obj['allowedIps'] = ApiClient.convertToType(data['allowedIps'], ['String']);
            }
            if (data.hasOwnProperty('protocol')) {
                obj['protocol'] = ApiClient.convertToType(data['protocol'], 'String');
            }
            if (data.hasOwnProperty('access')) {
                obj['access'] = ApiClient.convertToType(data['access'], 'String');
            }
        }
        return obj;
    }

    /**
    * A descriptive name for the rule
    * @member {String} name
    */
    'name' = undefined;
    /**
    * The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN
    * @member {String} lanIp
    */
    'lanIp' = undefined;
    /**
    * A port or port ranges that will be forwarded to the host on the LAN
    * @member {String} publicPort
    */
    'publicPort' = undefined;
    /**
    * A port or port ranges that will receive the forwarded traffic from the WAN
    * @member {String} localPort
    */
    'localPort' = undefined;
    /**
    * An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges.
    * @member {Array.<String>} allowedIps
    */
    'allowedIps' = undefined;
    /**
    * TCP or UDP
    * @member {String} protocol
    */
    'protocol' = undefined;
    /**
    * `any` or `restricted`. Specify the right to make inbound connections on the specified ports or port ranges. If `restricted`, a list of allowed IPs is mandatory.
    * @member {String} access
    */
    'access' = undefined;




}
