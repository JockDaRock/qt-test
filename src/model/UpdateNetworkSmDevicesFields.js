/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 September, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/NetworksnetworkIdsmdevicesfieldsDeviceFields'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./NetworksnetworkIdsmdevicesfieldsDeviceFields'));
  } else {
    // Browser globals (root is window)
    if (!root.MerakiDashboardApi) {
      root.MerakiDashboardApi = {};
    }
    root.MerakiDashboardApi.UpdateNetworkSmDevicesFields = factory(root.MerakiDashboardApi.ApiClient, root.MerakiDashboardApi.NetworksnetworkIdsmdevicesfieldsDeviceFields);
  }
}(this, function(ApiClient, NetworksnetworkIdsmdevicesfieldsDeviceFields) {
  'use strict';

  /**
   * The UpdateNetworkSmDevicesFields model module.
   * @module model/UpdateNetworkSmDevicesFields
   * @version 1.1.0
   */

  /**
   * Constructs a new <code>UpdateNetworkSmDevicesFields</code>.
   * @alias module:model/UpdateNetworkSmDevicesFields
   * @class
   * @param deviceFields {module:model/NetworksnetworkIdsmdevicesfieldsDeviceFields} 
   */
  var exports = function(deviceFields) {
    this.deviceFields = deviceFields;
  };

  /**
   * Constructs a <code>UpdateNetworkSmDevicesFields</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UpdateNetworkSmDevicesFields} obj Optional instance to populate.
   * @return {module:model/UpdateNetworkSmDevicesFields} The populated <code>UpdateNetworkSmDevicesFields</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('wifiMac'))
        obj.wifiMac = ApiClient.convertToType(data['wifiMac'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('serial'))
        obj.serial = ApiClient.convertToType(data['serial'], 'String');
      if (data.hasOwnProperty('deviceFields'))
        obj.deviceFields = NetworksnetworkIdsmdevicesfieldsDeviceFields.constructFromObject(data['deviceFields']);
    }
    return obj;
  }

  /**
   * The wifiMac of the device to be modified.
   * @member {String} wifiMac
   */
  exports.prototype.wifiMac = undefined;

  /**
   * The id of the device to be modified.
   * @member {String} id
   */
  exports.prototype.id = undefined;

  /**
   * The serial of the device to be modified.
   * @member {String} serial
   */
  exports.prototype.serial = undefined;

  /**
   * @member {module:model/NetworksnetworkIdsmdevicesfieldsDeviceFields} deviceFields
   */
  exports.prototype.deviceFields = undefined;

  return exports;

}));
