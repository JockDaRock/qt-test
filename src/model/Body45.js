/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 August, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NetworksnetworkIdappliancevpnsiteToSiteVpnHubs from './NetworksnetworkIdappliancevpnsiteToSiteVpnHubs';
import NetworksnetworkIdappliancevpnsiteToSiteVpnSubnets from './NetworksnetworkIdappliancevpnsiteToSiteVpnSubnets';

/**
* The Body45 model module.
* @module model/Body45
* @version 1.0.0
*/
export default class Body45 {
    /**
    * Constructs a new <code>Body45</code>.
    * @alias module:model/Body45
    * @class
    * @param mode {module:model/Body45.ModeEnum} The site-to-site VPN mode. Can be one of 'none', 'spoke' or 'hub'
    */

    constructor(mode) {
        
        
        this['mode'] = mode;
        
    }

    /**
    * Constructs a <code>Body45</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Body45} obj Optional instance to populate.
    * @return {module:model/Body45} The populated <code>Body45</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Body45();
                        
            
            if (data.hasOwnProperty('mode')) {
                obj['mode'] = ApiClient.convertToType(data['mode'], 'String');
            }
            if (data.hasOwnProperty('hubs')) {
                obj['hubs'] = ApiClient.convertToType(data['hubs'], [NetworksnetworkIdappliancevpnsiteToSiteVpnHubs]);
            }
            if (data.hasOwnProperty('subnets')) {
                obj['subnets'] = ApiClient.convertToType(data['subnets'], [NetworksnetworkIdappliancevpnsiteToSiteVpnSubnets]);
            }
        }
        return obj;
    }

    /**
    * The site-to-site VPN mode. Can be one of 'none', 'spoke' or 'hub'
    * @member {module:model/Body45.ModeEnum} mode
    */
    'mode' = undefined;
    /**
    * The list of VPN hubs, in order of preference. In spoke mode, at least 1 hub is required.
    * @member {Array.<module:model/NetworksnetworkIdappliancevpnsiteToSiteVpnHubs>} hubs
    */
    'hubs' = undefined;
    /**
    * The list of subnets and their VPN presence.
    * @member {Array.<module:model/NetworksnetworkIdappliancevpnsiteToSiteVpnSubnets>} subnets
    */
    'subnets' = undefined;



    /**
    * Allowed values for the <code>mode</code> property.
    * @enum {String}
    * @readonly
    */
    static ModeEnum = {
        /**
         * value: "none"
         * @const
         */
        "none": "none",
        /**
         * value: "spoke"
         * @const
         */
        "spoke": "spoke",
        /**
         * value: "hub"
         * @const
         */
        "hub": "hub"    };

}
