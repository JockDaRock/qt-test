/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 August, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NetworksnetworkIdmerakiAuthUsersAuthorizations from './NetworksnetworkIdmerakiAuthUsersAuthorizations';

/**
* The Body64 model module.
* @module model/Body64
* @version 1.0.0
*/
export default class Body64 {
    /**
    * Constructs a new <code>Body64</code>.
    * @alias module:model/Body64
    * @class
    * @param email {String} Email address of the user
    * @param name {String} Name of the user
    * @param password {String} The password for this user account
    * @param authorizations {Array.<module:model/NetworksnetworkIdmerakiAuthUsersAuthorizations>} Authorization zones and expiration dates for the user.
    */

    constructor(email, name, password, authorizations) {
        
        
        this['email'] = email;
        this['name'] = name;
        this['password'] = password;
        this['authorizations'] = authorizations;
        
    }

    /**
    * Constructs a <code>Body64</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Body64} obj Optional instance to populate.
    * @return {module:model/Body64} The populated <code>Body64</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Body64();
                        
            
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('accountType')) {
                obj['accountType'] = ApiClient.convertToType(data['accountType'], 'String');
            }
            if (data.hasOwnProperty('emailPasswordToUser')) {
                obj['emailPasswordToUser'] = ApiClient.convertToType(data['emailPasswordToUser'], 'Boolean');
            }
            if (data.hasOwnProperty('authorizations')) {
                obj['authorizations'] = ApiClient.convertToType(data['authorizations'], [NetworksnetworkIdmerakiAuthUsersAuthorizations]);
            }
        }
        return obj;
    }

    /**
    * Email address of the user
    * @member {String} email
    */
    'email' = undefined;
    /**
    * Name of the user
    * @member {String} name
    */
    'name' = undefined;
    /**
    * The password for this user account
    * @member {String} password
    */
    'password' = undefined;
    /**
    * Authorization type for user (currently we only support 802.1X account types, which is the default)
    * @member {String} accountType
    * @default '802.1X'
    */
    'accountType' = '802.1X';
    /**
    * Whether or not Meraki should email the password to user. Default is false.
    * @member {Boolean} emailPasswordToUser
    */
    'emailPasswordToUser' = undefined;
    /**
    * Authorization zones and expiration dates for the user.
    * @member {Array.<module:model/NetworksnetworkIdmerakiAuthUsersAuthorizations>} authorizations
    */
    'authorizations' = undefined;




}
