/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 September, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.MerakiDashboardApi) {
      root.MerakiDashboardApi = {};
    }
    root.MerakiDashboardApi.NetworksnetworkIdgroupPoliciesBonjourForwardingRules = factory(root.MerakiDashboardApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The NetworksnetworkIdgroupPoliciesBonjourForwardingRules model module.
   * @module model/NetworksnetworkIdgroupPoliciesBonjourForwardingRules
   * @version 1.1.0
   */

  /**
   * Constructs a new <code>NetworksnetworkIdgroupPoliciesBonjourForwardingRules</code>.
   * @alias module:model/NetworksnetworkIdgroupPoliciesBonjourForwardingRules
   * @class
   * @param vlanId {String} The ID of the service VLAN. Required.
   * @param services {Array.<module:model/NetworksnetworkIdgroupPoliciesBonjourForwardingRules.ServicesEnum>} A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'
   */
  var exports = function(vlanId, services) {
    this.vlanId = vlanId;
    this.services = services;
  };

  /**
   * Constructs a <code>NetworksnetworkIdgroupPoliciesBonjourForwardingRules</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/NetworksnetworkIdgroupPoliciesBonjourForwardingRules} obj Optional instance to populate.
   * @return {module:model/NetworksnetworkIdgroupPoliciesBonjourForwardingRules} The populated <code>NetworksnetworkIdgroupPoliciesBonjourForwardingRules</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('vlanId'))
        obj.vlanId = ApiClient.convertToType(data['vlanId'], 'String');
      if (data.hasOwnProperty('services'))
        obj.services = ApiClient.convertToType(data['services'], ['String']);
    }
    return obj;
  }

  /**
   * A description for your Bonjour forwarding rule. Optional.
   * @member {String} description
   */
  exports.prototype.description = undefined;

  /**
   * The ID of the service VLAN. Required.
   * @member {String} vlanId
   */
  exports.prototype.vlanId = undefined;

  /**
   * A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'
   * @member {Array.<module:model/NetworksnetworkIdgroupPoliciesBonjourForwardingRules.ServicesEnum>} services
   */
  exports.prototype.services = undefined;


  /**
   * Allowed values for the <code>services</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ServicesEnum = {
    /**
     * value: "All Services"
     * @const
     */
    allServices: "All Services",

    /**
     * value: "AirPlay"
     * @const
     */
    airPlay: "AirPlay",

    /**
     * value: "AFP"
     * @const
     */
    AFP: "AFP",

    /**
     * value: "BitTorrent"
     * @const
     */
    bitTorrent: "BitTorrent",

    /**
     * value: "FTP"
     * @const
     */
    FTP: "FTP",

    /**
     * value: "iChat"
     * @const
     */
    iChat: "iChat",

    /**
     * value: "iTunes"
     * @const
     */
    iTunes: "iTunes",

    /**
     * value: "Printers"
     * @const
     */
    printers: "Printers",

    /**
     * value: "Samba"
     * @const
     */
    samba: "Samba",

    /**
     * value: "Scanners"
     * @const
     */
    scanners: "Scanners",

    /**
     * value: "SSH"
     * @const
     */
    SSH: "SSH"
  };

  return exports;

}));
