/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 August, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MerakiDashboardApi);
  }
}(this, function(expect, MerakiDashboardApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MerakiDashboardApi.PortsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PortsApi', function() {
    describe('cycleDeviceSwitchPorts', function() {
      it('should call cycleDeviceSwitchPorts successfully', function(done) {
        //uncomment below and update the code to test cycleDeviceSwitchPorts
        //instance.cycleDeviceSwitchPorts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeviceSwitchPort', function() {
      it('should call getDeviceSwitchPort successfully', function(done) {
        //uncomment below and update the code to test getDeviceSwitchPort
        //instance.getDeviceSwitchPort(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeviceSwitchPorts', function() {
      it('should call getDeviceSwitchPorts successfully', function(done) {
        //uncomment below and update the code to test getDeviceSwitchPorts
        //instance.getDeviceSwitchPorts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeviceSwitchPortsStatuses', function() {
      it('should call getDeviceSwitchPortsStatuses successfully', function(done) {
        //uncomment below and update the code to test getDeviceSwitchPortsStatuses
        //instance.getDeviceSwitchPortsStatuses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeviceSwitchPortsStatusesPackets', function() {
      it('should call getDeviceSwitchPortsStatusesPackets successfully', function(done) {
        //uncomment below and update the code to test getDeviceSwitchPortsStatusesPackets
        //instance.getDeviceSwitchPortsStatusesPackets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkAppliancePort', function() {
      it('should call getNetworkAppliancePort successfully', function(done) {
        //uncomment below and update the code to test getNetworkAppliancePort
        //instance.getNetworkAppliancePort(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkAppliancePorts', function() {
      it('should call getNetworkAppliancePorts successfully', function(done) {
        //uncomment below and update the code to test getNetworkAppliancePorts
        //instance.getNetworkAppliancePorts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationConfigTemplateSwitchProfilePort', function() {
      it('should call getOrganizationConfigTemplateSwitchProfilePort successfully', function(done) {
        //uncomment below and update the code to test getOrganizationConfigTemplateSwitchProfilePort
        //instance.getOrganizationConfigTemplateSwitchProfilePort(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationConfigTemplateSwitchProfilePorts', function() {
      it('should call getOrganizationConfigTemplateSwitchProfilePorts successfully', function(done) {
        //uncomment below and update the code to test getOrganizationConfigTemplateSwitchProfilePorts
        //instance.getOrganizationConfigTemplateSwitchProfilePorts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDeviceSwitchPort', function() {
      it('should call updateDeviceSwitchPort successfully', function(done) {
        //uncomment below and update the code to test updateDeviceSwitchPort
        //instance.updateDeviceSwitchPort(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkAppliancePort', function() {
      it('should call updateNetworkAppliancePort successfully', function(done) {
        //uncomment below and update the code to test updateNetworkAppliancePort
        //instance.updateNetworkAppliancePort(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOrganizationConfigTemplateSwitchProfilePort', function() {
      it('should call updateOrganizationConfigTemplateSwitchProfilePort successfully', function(done) {
        //uncomment below and update the code to test updateOrganizationConfigTemplateSwitchProfilePort
        //instance.updateOrganizationConfigTemplateSwitchProfilePort(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
