/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 September, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/NetworksnetworkIdwirelessrfProfilesrfProfileIdApBandSettings', 'model/NetworksnetworkIdwirelessrfProfilesrfProfileIdFiveGhzSettings', 'model/NetworksnetworkIdwirelessrfProfilesrfProfileIdTwoFourGhzSettings'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./NetworksnetworkIdwirelessrfProfilesrfProfileIdApBandSettings'), require('./NetworksnetworkIdwirelessrfProfilesrfProfileIdFiveGhzSettings'), require('./NetworksnetworkIdwirelessrfProfilesrfProfileIdTwoFourGhzSettings'));
  } else {
    // Browser globals (root is window)
    if (!root.MerakiDashboardApi) {
      root.MerakiDashboardApi = {};
    }
    root.MerakiDashboardApi.UpdateNetworkWirelessRfProfile = factory(root.MerakiDashboardApi.ApiClient, root.MerakiDashboardApi.NetworksnetworkIdwirelessrfProfilesrfProfileIdApBandSettings, root.MerakiDashboardApi.NetworksnetworkIdwirelessrfProfilesrfProfileIdFiveGhzSettings, root.MerakiDashboardApi.NetworksnetworkIdwirelessrfProfilesrfProfileIdTwoFourGhzSettings);
  }
}(this, function(ApiClient, NetworksnetworkIdwirelessrfProfilesrfProfileIdApBandSettings, NetworksnetworkIdwirelessrfProfilesrfProfileIdFiveGhzSettings, NetworksnetworkIdwirelessrfProfilesrfProfileIdTwoFourGhzSettings) {
  'use strict';

  /**
   * The UpdateNetworkWirelessRfProfile model module.
   * @module model/UpdateNetworkWirelessRfProfile
   * @version 1.1.0
   */

  /**
   * Constructs a new <code>UpdateNetworkWirelessRfProfile</code>.
   * @alias module:model/UpdateNetworkWirelessRfProfile
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>UpdateNetworkWirelessRfProfile</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UpdateNetworkWirelessRfProfile} obj Optional instance to populate.
   * @return {module:model/UpdateNetworkWirelessRfProfile} The populated <code>UpdateNetworkWirelessRfProfile</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('clientBalancingEnabled'))
        obj.clientBalancingEnabled = ApiClient.convertToType(data['clientBalancingEnabled'], 'Boolean');
      if (data.hasOwnProperty('minBitrateType'))
        obj.minBitrateType = ApiClient.convertToType(data['minBitrateType'], 'String');
      if (data.hasOwnProperty('bandSelectionType'))
        obj.bandSelectionType = ApiClient.convertToType(data['bandSelectionType'], 'String');
      if (data.hasOwnProperty('apBandSettings'))
        obj.apBandSettings = NetworksnetworkIdwirelessrfProfilesrfProfileIdApBandSettings.constructFromObject(data['apBandSettings']);
      if (data.hasOwnProperty('twoFourGhzSettings'))
        obj.twoFourGhzSettings = NetworksnetworkIdwirelessrfProfilesrfProfileIdTwoFourGhzSettings.constructFromObject(data['twoFourGhzSettings']);
      if (data.hasOwnProperty('fiveGhzSettings'))
        obj.fiveGhzSettings = NetworksnetworkIdwirelessrfProfilesrfProfileIdFiveGhzSettings.constructFromObject(data['fiveGhzSettings']);
    }
    return obj;
  }

  /**
   * The name of the new profile. Must be unique.
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * Steers client to best available access point. Can be either true or false.
   * @member {Boolean} clientBalancingEnabled
   */
  exports.prototype.clientBalancingEnabled = undefined;

  /**
   * Minimum bitrate can be set to either 'band' or 'ssid'.
   * @member {module:model/UpdateNetworkWirelessRfProfile.MinBitrateTypeEnum} minBitrateType
   */
  exports.prototype.minBitrateType = undefined;

  /**
   * Band selection can be set to either 'ssid' or 'ap'.
   * @member {module:model/UpdateNetworkWirelessRfProfile.BandSelectionTypeEnum} bandSelectionType
   */
  exports.prototype.bandSelectionType = undefined;

  /**
   * @member {module:model/NetworksnetworkIdwirelessrfProfilesrfProfileIdApBandSettings} apBandSettings
   */
  exports.prototype.apBandSettings = undefined;

  /**
   * @member {module:model/NetworksnetworkIdwirelessrfProfilesrfProfileIdTwoFourGhzSettings} twoFourGhzSettings
   */
  exports.prototype.twoFourGhzSettings = undefined;

  /**
   * @member {module:model/NetworksnetworkIdwirelessrfProfilesrfProfileIdFiveGhzSettings} fiveGhzSettings
   */
  exports.prototype.fiveGhzSettings = undefined;


  /**
   * Allowed values for the <code>minBitrateType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.MinBitrateTypeEnum = {
    /**
     * value: "band"
     * @const
     */
    band: "band",

    /**
     * value: "ssid"
     * @const
     */
    ssid: "ssid"
  };


  /**
   * Allowed values for the <code>bandSelectionType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.BandSelectionTypeEnum = {
    /**
     * value: "ssid"
     * @const
     */
    ssid: "ssid",

    /**
     * value: "ap"
     * @const
     */
    ap: "ap"
  };

  return exports;

}));
