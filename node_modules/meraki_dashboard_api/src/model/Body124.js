/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 August, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrganizationsorganizationIdadminsNetworks from './OrganizationsorganizationIdadminsNetworks';
import OrganizationsorganizationIdadminsTags from './OrganizationsorganizationIdadminsTags';

/**
* The Body124 model module.
* @module model/Body124
* @version 1.0.0
*/
export default class Body124 {
    /**
    * Constructs a new <code>Body124</code>.
    * @alias module:model/Body124
    * @class
    * @param email {String} The email of the dashboard administrator. This attribute can not be updated.
    * @param name {String} The name of the dashboard administrator
    * @param orgAccess {module:model/Body124.OrgAccessEnum} The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'
    */

    constructor(email, name, orgAccess) {
        
        
        this['email'] = email;
        this['name'] = name;
        this['orgAccess'] = orgAccess;
        
    }

    /**
    * Constructs a <code>Body124</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Body124} obj Optional instance to populate.
    * @return {module:model/Body124} The populated <code>Body124</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Body124();
                        
            
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('orgAccess')) {
                obj['orgAccess'] = ApiClient.convertToType(data['orgAccess'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], [OrganizationsorganizationIdadminsTags]);
            }
            if (data.hasOwnProperty('networks')) {
                obj['networks'] = ApiClient.convertToType(data['networks'], [OrganizationsorganizationIdadminsNetworks]);
            }
            if (data.hasOwnProperty('authenticationMethod')) {
                obj['authenticationMethod'] = ApiClient.convertToType(data['authenticationMethod'], 'String');
            }
        }
        return obj;
    }

    /**
    * The email of the dashboard administrator. This attribute can not be updated.
    * @member {String} email
    */
    'email' = undefined;
    /**
    * The name of the dashboard administrator
    * @member {String} name
    */
    'name' = undefined;
    /**
    * The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'
    * @member {module:model/Body124.OrgAccessEnum} orgAccess
    */
    'orgAccess' = undefined;
    /**
    * The list of tags that the dashboard administrator has privileges on
    * @member {Array.<module:model/OrganizationsorganizationIdadminsTags>} tags
    */
    'tags' = undefined;
    /**
    * The list of networks that the dashboard administrator has privileges on
    * @member {Array.<module:model/OrganizationsorganizationIdadminsNetworks>} networks
    */
    'networks' = undefined;
    /**
    * The method of authentication the user will use to sign in to the Meraki dashboard. Can be one of 'Email' or 'Cisco SecureX Sign-On'. The default is Email authentication
    * @member {module:model/Body124.AuthenticationMethodEnum} authenticationMethod
    */
    'authenticationMethod' = undefined;



    /**
    * Allowed values for the <code>orgAccess</code> property.
    * @enum {String}
    * @readonly
    */
    static OrgAccessEnum = {
        /**
         * value: "full"
         * @const
         */
        "full": "full",
        /**
         * value: "read-only"
         * @const
         */
        "read-only": "read-only",
        /**
         * value: "enterprise"
         * @const
         */
        "enterprise": "enterprise",
        /**
         * value: "none"
         * @const
         */
        "none": "none"    };
    /**
    * Allowed values for the <code>authenticationMethod</code> property.
    * @enum {String}
    * @readonly
    */
    static AuthenticationMethodEnum = {
        /**
         * value: "Email"
         * @const
         */
        "Email": "Email",
        /**
         * value: "Cisco SecureX Sign-On"
         * @const
         */
        "Cisco SecureX Sign-On": "Cisco SecureX Sign-On"    };

}
