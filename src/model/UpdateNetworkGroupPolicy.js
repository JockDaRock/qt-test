/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 September, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/NetworksnetworkIdgroupPoliciesBandwidth', 'model/NetworksnetworkIdgroupPoliciesBonjourForwarding', 'model/NetworksnetworkIdgroupPoliciesContentFiltering', 'model/NetworksnetworkIdgroupPoliciesFirewallAndTrafficShaping', 'model/NetworksnetworkIdgroupPoliciesScheduling', 'model/NetworksnetworkIdgroupPoliciesVlanTagging'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./NetworksnetworkIdgroupPoliciesBandwidth'), require('./NetworksnetworkIdgroupPoliciesBonjourForwarding'), require('./NetworksnetworkIdgroupPoliciesContentFiltering'), require('./NetworksnetworkIdgroupPoliciesFirewallAndTrafficShaping'), require('./NetworksnetworkIdgroupPoliciesScheduling'), require('./NetworksnetworkIdgroupPoliciesVlanTagging'));
  } else {
    // Browser globals (root is window)
    if (!root.MerakiDashboardApi) {
      root.MerakiDashboardApi = {};
    }
    root.MerakiDashboardApi.UpdateNetworkGroupPolicy = factory(root.MerakiDashboardApi.ApiClient, root.MerakiDashboardApi.NetworksnetworkIdgroupPoliciesBandwidth, root.MerakiDashboardApi.NetworksnetworkIdgroupPoliciesBonjourForwarding, root.MerakiDashboardApi.NetworksnetworkIdgroupPoliciesContentFiltering, root.MerakiDashboardApi.NetworksnetworkIdgroupPoliciesFirewallAndTrafficShaping, root.MerakiDashboardApi.NetworksnetworkIdgroupPoliciesScheduling, root.MerakiDashboardApi.NetworksnetworkIdgroupPoliciesVlanTagging);
  }
}(this, function(ApiClient, NetworksnetworkIdgroupPoliciesBandwidth, NetworksnetworkIdgroupPoliciesBonjourForwarding, NetworksnetworkIdgroupPoliciesContentFiltering, NetworksnetworkIdgroupPoliciesFirewallAndTrafficShaping, NetworksnetworkIdgroupPoliciesScheduling, NetworksnetworkIdgroupPoliciesVlanTagging) {
  'use strict';

  /**
   * The UpdateNetworkGroupPolicy model module.
   * @module model/UpdateNetworkGroupPolicy
   * @version 1.1.0
   */

  /**
   * Constructs a new <code>UpdateNetworkGroupPolicy</code>.
   * @alias module:model/UpdateNetworkGroupPolicy
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>UpdateNetworkGroupPolicy</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UpdateNetworkGroupPolicy} obj Optional instance to populate.
   * @return {module:model/UpdateNetworkGroupPolicy} The populated <code>UpdateNetworkGroupPolicy</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('scheduling'))
        obj.scheduling = NetworksnetworkIdgroupPoliciesScheduling.constructFromObject(data['scheduling']);
      if (data.hasOwnProperty('bandwidth'))
        obj.bandwidth = NetworksnetworkIdgroupPoliciesBandwidth.constructFromObject(data['bandwidth']);
      if (data.hasOwnProperty('firewallAndTrafficShaping'))
        obj.firewallAndTrafficShaping = NetworksnetworkIdgroupPoliciesFirewallAndTrafficShaping.constructFromObject(data['firewallAndTrafficShaping']);
      if (data.hasOwnProperty('contentFiltering'))
        obj.contentFiltering = NetworksnetworkIdgroupPoliciesContentFiltering.constructFromObject(data['contentFiltering']);
      if (data.hasOwnProperty('splashAuthSettings'))
        obj.splashAuthSettings = ApiClient.convertToType(data['splashAuthSettings'], 'String');
      if (data.hasOwnProperty('vlanTagging'))
        obj.vlanTagging = NetworksnetworkIdgroupPoliciesVlanTagging.constructFromObject(data['vlanTagging']);
      if (data.hasOwnProperty('bonjourForwarding'))
        obj.bonjourForwarding = NetworksnetworkIdgroupPoliciesBonjourForwarding.constructFromObject(data['bonjourForwarding']);
    }
    return obj;
  }

  /**
   * The name for your group policy.
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * @member {module:model/NetworksnetworkIdgroupPoliciesScheduling} scheduling
   */
  exports.prototype.scheduling = undefined;

  /**
   * @member {module:model/NetworksnetworkIdgroupPoliciesBandwidth} bandwidth
   */
  exports.prototype.bandwidth = undefined;

  /**
   * @member {module:model/NetworksnetworkIdgroupPoliciesFirewallAndTrafficShaping} firewallAndTrafficShaping
   */
  exports.prototype.firewallAndTrafficShaping = undefined;

  /**
   * @member {module:model/NetworksnetworkIdgroupPoliciesContentFiltering} contentFiltering
   */
  exports.prototype.contentFiltering = undefined;

  /**
   * Whether clients bound to your policy will bypass splash authorization or behave according to the network's rules. Can be one of 'network default' or 'bypass'. Only available if your network has a wireless configuration.
   * @member {module:model/UpdateNetworkGroupPolicy.SplashAuthSettingsEnum} splashAuthSettings
   */
  exports.prototype.splashAuthSettings = undefined;

  /**
   * @member {module:model/NetworksnetworkIdgroupPoliciesVlanTagging} vlanTagging
   */
  exports.prototype.vlanTagging = undefined;

  /**
   * @member {module:model/NetworksnetworkIdgroupPoliciesBonjourForwarding} bonjourForwarding
   */
  exports.prototype.bonjourForwarding = undefined;


  /**
   * Allowed values for the <code>splashAuthSettings</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SplashAuthSettingsEnum = {
    /**
     * value: "network default"
     * @const
     */
    networkDefault: "network default",

    /**
     * value: "bypass"
     * @const
     */
    bypass: "bypass"
  };

  return exports;

}));
