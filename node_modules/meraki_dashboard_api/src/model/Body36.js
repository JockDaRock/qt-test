/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 August, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NetworksnetworkIdappliancestaticRoutesstaticRouteIdReservedIpRanges from './NetworksnetworkIdappliancestaticRoutesstaticRouteIdReservedIpRanges';

/**
* The Body36 model module.
* @module model/Body36
* @version 1.0.0
*/
export default class Body36 {
    /**
    * Constructs a new <code>Body36</code>.
    * @alias module:model/Body36
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>Body36</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Body36} obj Optional instance to populate.
    * @return {module:model/Body36} The populated <code>Body36</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Body36();
                        
            
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('subnet')) {
                obj['subnet'] = ApiClient.convertToType(data['subnet'], 'String');
            }
            if (data.hasOwnProperty('gatewayIp')) {
                obj['gatewayIp'] = ApiClient.convertToType(data['gatewayIp'], 'String');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('fixedIpAssignments')) {
                obj['fixedIpAssignments'] = ApiClient.convertToType(data['fixedIpAssignments'], Object);
            }
            if (data.hasOwnProperty('reservedIpRanges')) {
                obj['reservedIpRanges'] = ApiClient.convertToType(data['reservedIpRanges'], [NetworksnetworkIdappliancestaticRoutesstaticRouteIdReservedIpRanges]);
            }
        }
        return obj;
    }

    /**
    * The name of the static route
    * @member {String} name
    */
    'name' = undefined;
    /**
    * The subnet of the static route
    * @member {String} subnet
    */
    'subnet' = undefined;
    /**
    * The gateway IP (next hop) of the static route
    * @member {String} gatewayIp
    */
    'gatewayIp' = undefined;
    /**
    * The enabled state of the static route
    * @member {Boolean} enabled
    */
    'enabled' = undefined;
    /**
    * The DHCP fixed IP assignments on the static route. This should be an object that contains mappings from MAC addresses to objects that themselves each contain \"ip\" and \"name\" string fields. See the sample request/response for more details.
    * @member {Object} fixedIpAssignments
    */
    'fixedIpAssignments' = undefined;
    /**
    * The DHCP reserved IP ranges on the static route
    * @member {Array.<module:model/NetworksnetworkIdappliancestaticRoutesstaticRouteIdReservedIpRanges>} reservedIpRanges
    */
    'reservedIpRanges' = undefined;




}
