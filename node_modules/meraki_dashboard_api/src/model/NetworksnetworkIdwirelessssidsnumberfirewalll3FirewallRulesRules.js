/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 August, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The NetworksnetworkIdwirelessssidsnumberfirewalll3FirewallRulesRules model module.
* @module model/NetworksnetworkIdwirelessssidsnumberfirewalll3FirewallRulesRules
* @version 1.0.0
*/
export default class NetworksnetworkIdwirelessssidsnumberfirewalll3FirewallRulesRules {
    /**
    * Constructs a new <code>NetworksnetworkIdwirelessssidsnumberfirewalll3FirewallRulesRules</code>.
    * @alias module:model/NetworksnetworkIdwirelessssidsnumberfirewalll3FirewallRulesRules
    * @class
    * @param policy {module:model/NetworksnetworkIdwirelessssidsnumberfirewalll3FirewallRulesRules.PolicyEnum} 'allow' or 'deny' traffic specified by this rule
    * @param protocol {module:model/NetworksnetworkIdwirelessssidsnumberfirewalll3FirewallRulesRules.ProtocolEnum} The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')
    * @param destCidr {String} Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'
    */

    constructor(policy, protocol, destCidr) {
        
        
        this['policy'] = policy;
        this['protocol'] = protocol;
        this['destCidr'] = destCidr;
        
    }

    /**
    * Constructs a <code>NetworksnetworkIdwirelessssidsnumberfirewalll3FirewallRulesRules</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/NetworksnetworkIdwirelessssidsnumberfirewalll3FirewallRulesRules} obj Optional instance to populate.
    * @return {module:model/NetworksnetworkIdwirelessssidsnumberfirewalll3FirewallRulesRules} The populated <code>NetworksnetworkIdwirelessssidsnumberfirewalll3FirewallRulesRules</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworksnetworkIdwirelessssidsnumberfirewalll3FirewallRulesRules();
                        
            
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('policy')) {
                obj['policy'] = ApiClient.convertToType(data['policy'], 'String');
            }
            if (data.hasOwnProperty('protocol')) {
                obj['protocol'] = ApiClient.convertToType(data['protocol'], 'String');
            }
            if (data.hasOwnProperty('destPort')) {
                obj['destPort'] = ApiClient.convertToType(data['destPort'], 'String');
            }
            if (data.hasOwnProperty('destCidr')) {
                obj['destCidr'] = ApiClient.convertToType(data['destCidr'], 'String');
            }
        }
        return obj;
    }

    /**
    * Description of the rule (optional)
    * @member {String} comment
    */
    'comment' = undefined;
    /**
    * 'allow' or 'deny' traffic specified by this rule
    * @member {module:model/NetworksnetworkIdwirelessssidsnumberfirewalll3FirewallRulesRules.PolicyEnum} policy
    */
    'policy' = undefined;
    /**
    * The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')
    * @member {module:model/NetworksnetworkIdwirelessssidsnumberfirewalll3FirewallRulesRules.ProtocolEnum} protocol
    */
    'protocol' = undefined;
    /**
    * Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'
    * @member {String} destPort
    */
    'destPort' = undefined;
    /**
    * Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'
    * @member {String} destCidr
    */
    'destCidr' = undefined;



    /**
    * Allowed values for the <code>policy</code> property.
    * @enum {String}
    * @readonly
    */
    static PolicyEnum = {
        /**
         * value: "allow"
         * @const
         */
        "allow": "allow",
        /**
         * value: "deny"
         * @const
         */
        "deny": "deny"    };
    /**
    * Allowed values for the <code>protocol</code> property.
    * @enum {String}
    * @readonly
    */
    static ProtocolEnum = {
        /**
         * value: "tcp"
         * @const
         */
        "tcp": "tcp",
        /**
         * value: "udp"
         * @const
         */
        "udp": "udp",
        /**
         * value: "icmp"
         * @const
         */
        "icmp": "icmp",
        /**
         * value: "any"
         * @const
         */
        "any": "any"    };

}
