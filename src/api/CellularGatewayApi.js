/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 September, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/UpdateDeviceCellularGatewayLan', 'model/UpdateDeviceCellularGatewayPortForwardingRules', 'model/UpdateNetworkCellularGatewayConnectivityMonitoringDestinations', 'model/UpdateNetworkCellularGatewayDhcp', 'model/UpdateNetworkCellularGatewaySubnetPool', 'model/UpdateNetworkCellularGatewayUplink'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/UpdateDeviceCellularGatewayLan'), require('../model/UpdateDeviceCellularGatewayPortForwardingRules'), require('../model/UpdateNetworkCellularGatewayConnectivityMonitoringDestinations'), require('../model/UpdateNetworkCellularGatewayDhcp'), require('../model/UpdateNetworkCellularGatewaySubnetPool'), require('../model/UpdateNetworkCellularGatewayUplink'));
  } else {
    // Browser globals (root is window)
    if (!root.MerakiDashboardApi) {
      root.MerakiDashboardApi = {};
    }
    root.MerakiDashboardApi.CellularGatewayApi = factory(root.MerakiDashboardApi.ApiClient, root.MerakiDashboardApi.UpdateDeviceCellularGatewayLan, root.MerakiDashboardApi.UpdateDeviceCellularGatewayPortForwardingRules, root.MerakiDashboardApi.UpdateNetworkCellularGatewayConnectivityMonitoringDestinations, root.MerakiDashboardApi.UpdateNetworkCellularGatewayDhcp, root.MerakiDashboardApi.UpdateNetworkCellularGatewaySubnetPool, root.MerakiDashboardApi.UpdateNetworkCellularGatewayUplink);
  }
}(this, function(ApiClient, UpdateDeviceCellularGatewayLan, UpdateDeviceCellularGatewayPortForwardingRules, UpdateNetworkCellularGatewayConnectivityMonitoringDestinations, UpdateNetworkCellularGatewayDhcp, UpdateNetworkCellularGatewaySubnetPool, UpdateNetworkCellularGatewayUplink) {
  'use strict';

  /**
   * CellularGateway service.
   * @module api/CellularGatewayApi
   * @version 1.1.0
   */

  /**
   * Constructs a new CellularGatewayApi. 
   * @alias module:api/CellularGatewayApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getDeviceCellularGatewayLan operation.
     * @callback module:api/CellularGatewayApi~getDeviceCellularGatewayLanCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Show the LAN Settings of a MG
     * Show the LAN Settings of a MG
     * @param {String} serial 
     * @param {module:api/CellularGatewayApi~getDeviceCellularGatewayLanCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.getDeviceCellularGatewayLan = function(serial, callback) {
      var postBody = null;

      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling getDeviceCellularGatewayLan");
      }


      var pathParams = {
        'serial': serial
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['meraki_api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/devices/{serial}/cellularGateway/lan', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getDeviceCellularGatewayPortForwardingRules operation.
     * @callback module:api/CellularGatewayApi~getDeviceCellularGatewayPortForwardingRulesCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the port forwarding rules for a single MG.
     * Returns the port forwarding rules for a single MG.
     * @param {String} serial 
     * @param {module:api/CellularGatewayApi~getDeviceCellularGatewayPortForwardingRulesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.getDeviceCellularGatewayPortForwardingRules = function(serial, callback) {
      var postBody = null;

      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling getDeviceCellularGatewayPortForwardingRules");
      }


      var pathParams = {
        'serial': serial
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['meraki_api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/devices/{serial}/cellularGateway/portForwardingRules', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkCellularGatewayConnectivityMonitoringDestinations operation.
     * @callback module:api/CellularGatewayApi~getNetworkCellularGatewayConnectivityMonitoringDestinationsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return the connectivity testing destinations for an MG network
     * Return the connectivity testing destinations for an MG network
     * @param {String} networkId 
     * @param {module:api/CellularGatewayApi~getNetworkCellularGatewayConnectivityMonitoringDestinationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.getNetworkCellularGatewayConnectivityMonitoringDestinations = function(networkId, callback) {
      var postBody = null;

      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkCellularGatewayConnectivityMonitoringDestinations");
      }


      var pathParams = {
        'networkId': networkId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['meraki_api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/cellularGateway/connectivityMonitoringDestinations', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkCellularGatewayDhcp operation.
     * @callback module:api/CellularGatewayApi~getNetworkCellularGatewayDhcpCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List common DHCP settings of MGs
     * List common DHCP settings of MGs
     * @param {String} networkId 
     * @param {module:api/CellularGatewayApi~getNetworkCellularGatewayDhcpCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.getNetworkCellularGatewayDhcp = function(networkId, callback) {
      var postBody = null;

      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkCellularGatewayDhcp");
      }


      var pathParams = {
        'networkId': networkId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['meraki_api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/cellularGateway/dhcp', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkCellularGatewaySubnetPool operation.
     * @callback module:api/CellularGatewayApi~getNetworkCellularGatewaySubnetPoolCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return the subnet pool and mask configured for MGs in the network.
     * Return the subnet pool and mask configured for MGs in the network.
     * @param {String} networkId 
     * @param {module:api/CellularGatewayApi~getNetworkCellularGatewaySubnetPoolCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.getNetworkCellularGatewaySubnetPool = function(networkId, callback) {
      var postBody = null;

      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkCellularGatewaySubnetPool");
      }


      var pathParams = {
        'networkId': networkId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['meraki_api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/cellularGateway/subnetPool', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkCellularGatewayUplink operation.
     * @callback module:api/CellularGatewayApi~getNetworkCellularGatewayUplinkCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the uplink settings for your MG network.
     * Returns the uplink settings for your MG network.
     * @param {String} networkId 
     * @param {module:api/CellularGatewayApi~getNetworkCellularGatewayUplinkCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.getNetworkCellularGatewayUplink = function(networkId, callback) {
      var postBody = null;

      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkCellularGatewayUplink");
      }


      var pathParams = {
        'networkId': networkId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['meraki_api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/cellularGateway/uplink', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateDeviceCellularGatewayLan operation.
     * @callback module:api/CellularGatewayApi~updateDeviceCellularGatewayLanCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the LAN Settings for a single MG.
     * Update the LAN Settings for a single MG.
     * @param {String} serial 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateDeviceCellularGatewayLan} opts.updateDeviceCellularGatewayLan 
     * @param {module:api/CellularGatewayApi~updateDeviceCellularGatewayLanCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.updateDeviceCellularGatewayLan = function(serial, opts, callback) {
      opts = opts || {};
      var postBody = opts['updateDeviceCellularGatewayLan'];

      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling updateDeviceCellularGatewayLan");
      }


      var pathParams = {
        'serial': serial
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['meraki_api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/devices/{serial}/cellularGateway/lan', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateDeviceCellularGatewayPortForwardingRules operation.
     * @callback module:api/CellularGatewayApi~updateDeviceCellularGatewayPortForwardingRulesCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the port forwarding rules for a single MG.
     * Updates the port forwarding rules for a single MG.
     * @param {String} serial 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateDeviceCellularGatewayPortForwardingRules} opts.updateDeviceCellularGatewayPortForwardingRules 
     * @param {module:api/CellularGatewayApi~updateDeviceCellularGatewayPortForwardingRulesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.updateDeviceCellularGatewayPortForwardingRules = function(serial, opts, callback) {
      opts = opts || {};
      var postBody = opts['updateDeviceCellularGatewayPortForwardingRules'];

      // verify the required parameter 'serial' is set
      if (serial === undefined || serial === null) {
        throw new Error("Missing the required parameter 'serial' when calling updateDeviceCellularGatewayPortForwardingRules");
      }


      var pathParams = {
        'serial': serial
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['meraki_api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/devices/{serial}/cellularGateway/portForwardingRules', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkCellularGatewayConnectivityMonitoringDestinations operation.
     * @callback module:api/CellularGatewayApi~updateNetworkCellularGatewayConnectivityMonitoringDestinationsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the connectivity testing destinations for an MG network
     * Update the connectivity testing destinations for an MG network
     * @param {String} networkId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkCellularGatewayConnectivityMonitoringDestinations} opts.updateNetworkCellularGatewayConnectivityMonitoringDestinations 
     * @param {module:api/CellularGatewayApi~updateNetworkCellularGatewayConnectivityMonitoringDestinationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.updateNetworkCellularGatewayConnectivityMonitoringDestinations = function(networkId, opts, callback) {
      opts = opts || {};
      var postBody = opts['updateNetworkCellularGatewayConnectivityMonitoringDestinations'];

      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkCellularGatewayConnectivityMonitoringDestinations");
      }


      var pathParams = {
        'networkId': networkId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['meraki_api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/cellularGateway/connectivityMonitoringDestinations', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkCellularGatewayDhcp operation.
     * @callback module:api/CellularGatewayApi~updateNetworkCellularGatewayDhcpCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update common DHCP settings of MGs
     * Update common DHCP settings of MGs
     * @param {String} networkId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkCellularGatewayDhcp} opts.updateNetworkCellularGatewayDhcp 
     * @param {module:api/CellularGatewayApi~updateNetworkCellularGatewayDhcpCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.updateNetworkCellularGatewayDhcp = function(networkId, opts, callback) {
      opts = opts || {};
      var postBody = opts['updateNetworkCellularGatewayDhcp'];

      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkCellularGatewayDhcp");
      }


      var pathParams = {
        'networkId': networkId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['meraki_api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/cellularGateway/dhcp', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkCellularGatewaySubnetPool operation.
     * @callback module:api/CellularGatewayApi~updateNetworkCellularGatewaySubnetPoolCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the subnet pool and mask configuration for MGs in the network.
     * Update the subnet pool and mask configuration for MGs in the network.
     * @param {String} networkId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkCellularGatewaySubnetPool} opts.updateNetworkCellularGatewaySubnetPool 
     * @param {module:api/CellularGatewayApi~updateNetworkCellularGatewaySubnetPoolCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.updateNetworkCellularGatewaySubnetPool = function(networkId, opts, callback) {
      opts = opts || {};
      var postBody = opts['updateNetworkCellularGatewaySubnetPool'];

      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkCellularGatewaySubnetPool");
      }


      var pathParams = {
        'networkId': networkId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['meraki_api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/cellularGateway/subnetPool', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkCellularGatewayUplink operation.
     * @callback module:api/CellularGatewayApi~updateNetworkCellularGatewayUplinkCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the uplink settings for your MG network.
     * Updates the uplink settings for your MG network.
     * @param {String} networkId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkCellularGatewayUplink} opts.updateNetworkCellularGatewayUplink 
     * @param {module:api/CellularGatewayApi~updateNetworkCellularGatewayUplinkCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.updateNetworkCellularGatewayUplink = function(networkId, opts, callback) {
      opts = opts || {};
      var postBody = opts['updateNetworkCellularGatewayUplink'];

      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkCellularGatewayUplink");
      }


      var pathParams = {
        'networkId': networkId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['meraki_api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/cellularGateway/uplink', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
