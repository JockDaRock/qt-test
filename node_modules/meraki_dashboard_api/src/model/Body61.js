/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 August, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NetworksnetworkIdfloorPlansBottomLeftCorner from './NetworksnetworkIdfloorPlansBottomLeftCorner';
import NetworksnetworkIdfloorPlansBottomRightCorner from './NetworksnetworkIdfloorPlansBottomRightCorner';
import NetworksnetworkIdfloorPlansTopLeftCorner from './NetworksnetworkIdfloorPlansTopLeftCorner';
import NetworksnetworkIdfloorPlansTopRightCorner from './NetworksnetworkIdfloorPlansTopRightCorner';
import NetworksnetworkIdfloorPlansfloorPlanIdCenter from './NetworksnetworkIdfloorPlansfloorPlanIdCenter';

/**
* The Body61 model module.
* @module model/Body61
* @version 1.0.0
*/
export default class Body61 {
    /**
    * Constructs a new <code>Body61</code>.
    * @alias module:model/Body61
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>Body61</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Body61} obj Optional instance to populate.
    * @return {module:model/Body61} The populated <code>Body61</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Body61();
                        
            
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('center')) {
                obj['center'] = NetworksnetworkIdfloorPlansfloorPlanIdCenter.constructFromObject(data['center']);
            }
            if (data.hasOwnProperty('bottomLeftCorner')) {
                obj['bottomLeftCorner'] = NetworksnetworkIdfloorPlansBottomLeftCorner.constructFromObject(data['bottomLeftCorner']);
            }
            if (data.hasOwnProperty('bottomRightCorner')) {
                obj['bottomRightCorner'] = NetworksnetworkIdfloorPlansBottomRightCorner.constructFromObject(data['bottomRightCorner']);
            }
            if (data.hasOwnProperty('topLeftCorner')) {
                obj['topLeftCorner'] = NetworksnetworkIdfloorPlansTopLeftCorner.constructFromObject(data['topLeftCorner']);
            }
            if (data.hasOwnProperty('topRightCorner')) {
                obj['topRightCorner'] = NetworksnetworkIdfloorPlansTopRightCorner.constructFromObject(data['topRightCorner']);
            }
            if (data.hasOwnProperty('imageContents')) {
                obj['imageContents'] = ApiClient.convertToType(data['imageContents'], 'Blob');
            }
        }
        return obj;
    }

    /**
    * The name of your floor plan.
    * @member {String} name
    */
    'name' = undefined;
    /**
    * @member {module:model/NetworksnetworkIdfloorPlansfloorPlanIdCenter} center
    */
    'center' = undefined;
    /**
    * @member {module:model/NetworksnetworkIdfloorPlansBottomLeftCorner} bottomLeftCorner
    */
    'bottomLeftCorner' = undefined;
    /**
    * @member {module:model/NetworksnetworkIdfloorPlansBottomRightCorner} bottomRightCorner
    */
    'bottomRightCorner' = undefined;
    /**
    * @member {module:model/NetworksnetworkIdfloorPlansTopLeftCorner} topLeftCorner
    */
    'topLeftCorner' = undefined;
    /**
    * @member {module:model/NetworksnetworkIdfloorPlansTopRightCorner} topRightCorner
    */
    'topRightCorner' = undefined;
    /**
    * The file contents (a base 64 encoded string) of your new image. Supported formats are PNG, GIF, and JPG. Note that all images are saved as PNG files, regardless of the format they are uploaded in. If you upload a new image, and you do NOT specify any new geolocation fields ('center, 'topLeftCorner', etc), the floor plan will be recentered with no rotation in order to maintain the aspect ratio of your new image.
    * @member {Blob} imageContents
    */
    'imageContents' = undefined;




}
