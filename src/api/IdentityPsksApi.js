/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 August, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import Body116 from '../model/Body116';
import Body117 from '../model/Body117';

/**
* IdentityPsks service.
* @module api/IdentityPsksApi
* @version 1.0.0
*/
export default class IdentityPsksApi {

    /**
    * Constructs a new IdentityPsksApi. 
    * @alias module:api/IdentityPsksApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the createNetworkWirelessSsidIdentityPsk operation.
     * @callback module:api/IdentityPsksApi~createNetworkWirelessSsidIdentityPskCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an Identity PSK
     * Create an Identity PSK
     * @param {module:api/IdentityPsksApi~createNetworkWirelessSsidIdentityPskCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createNetworkWirelessSsidIdentityPsk(body, networkId, _number, callback) {
      let postBody = body;

      let pathParams = {
        'networkId': networkId,
        'number': _number
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/wireless/ssids/{number}/identityPsks', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the deleteNetworkWirelessSsidIdentityPsk operation.
     * @callback module:api/IdentityPsksApi~deleteNetworkWirelessSsidIdentityPskCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an Identity PSK
     * Delete an Identity PSK
     * @param {module:api/IdentityPsksApi~deleteNetworkWirelessSsidIdentityPskCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteNetworkWirelessSsidIdentityPsk(networkId, _number, identityPskId, callback) {
      let postBody = null;

      let pathParams = {
        'networkId': networkId,
        'number': _number,
        'identityPskId': identityPskId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getNetworkWirelessSsidIdentityPsk operation.
     * @callback module:api/IdentityPsksApi~getNetworkWirelessSsidIdentityPskCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return an Identity PSK
     * Return an Identity PSK
     * @param {module:api/IdentityPsksApi~getNetworkWirelessSsidIdentityPskCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkWirelessSsidIdentityPsk(networkId, _number, identityPskId, callback) {
      let postBody = null;

      let pathParams = {
        'networkId': networkId,
        'number': _number,
        'identityPskId': identityPskId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getNetworkWirelessSsidIdentityPsks operation.
     * @callback module:api/IdentityPsksApi~getNetworkWirelessSsidIdentityPsksCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all Identity PSKs in a wireless network
     * List all Identity PSKs in a wireless network
     * @param {module:api/IdentityPsksApi~getNetworkWirelessSsidIdentityPsksCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNetworkWirelessSsidIdentityPsks(networkId, _number, callback) {
      let postBody = null;

      let pathParams = {
        'networkId': networkId,
        'number': _number
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/wireless/ssids/{number}/identityPsks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the updateNetworkWirelessSsidIdentityPsk operation.
     * @callback module:api/IdentityPsksApi~updateNetworkWirelessSsidIdentityPskCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an Identity PSK
     * Update an Identity PSK
     * @param {Object} opts Optional parameters
     * @param {module:api/IdentityPsksApi~updateNetworkWirelessSsidIdentityPskCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateNetworkWirelessSsidIdentityPsk(networkId, _number, identityPskId, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        'networkId': networkId,
        'number': _number,
        'identityPskId': identityPskId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['meraki_api_key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
