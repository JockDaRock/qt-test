/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 August, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The OrganizationsorganizationIdbrandingPoliciesAdminSettings model module.
* @module model/OrganizationsorganizationIdbrandingPoliciesAdminSettings
* @version 1.0.0
*/
export default class OrganizationsorganizationIdbrandingPoliciesAdminSettings {
    /**
    * Constructs a new <code>OrganizationsorganizationIdbrandingPoliciesAdminSettings</code>.
    * Settings for describing which kinds of admins this policy applies to.
    * @alias module:model/OrganizationsorganizationIdbrandingPoliciesAdminSettings
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>OrganizationsorganizationIdbrandingPoliciesAdminSettings</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/OrganizationsorganizationIdbrandingPoliciesAdminSettings} obj Optional instance to populate.
    * @return {module:model/OrganizationsorganizationIdbrandingPoliciesAdminSettings} The populated <code>OrganizationsorganizationIdbrandingPoliciesAdminSettings</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrganizationsorganizationIdbrandingPoliciesAdminSettings();
                        
            
            if (data.hasOwnProperty('appliesTo')) {
                obj['appliesTo'] = ApiClient.convertToType(data['appliesTo'], 'String');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], ['String']);
            }
        }
        return obj;
    }

    /**
    * Which kinds of admins this policy applies to. Can be one of 'All organization admins', 'All enterprise admins', 'All network admins', 'All admins of networks...', 'All admins of networks tagged...', 'Specific admins...', 'All admins' or 'All SAML admins'.
    * @member {module:model/OrganizationsorganizationIdbrandingPoliciesAdminSettings.AppliesToEnum} appliesTo
    */
    'appliesTo' = undefined;
    /**
    *     If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of     entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of     networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',     specify an array of tag names. 
    * @member {Array.<String>} values
    */
    'values' = undefined;



    /**
    * Allowed values for the <code>appliesTo</code> property.
    * @enum {String}
    * @readonly
    */
    static AppliesToEnum = {
        /**
         * value: "All organization admins"
         * @const
         */
        "All organization admins": "All organization admins",
        /**
         * value: "All enterprise admins"
         * @const
         */
        "All enterprise admins": "All enterprise admins",
        /**
         * value: "All network admins"
         * @const
         */
        "All network admins": "All network admins",
        /**
         * value: "All admins of networks..."
         * @const
         */
        "All admins of networks...": "All admins of networks...",
        /**
         * value: "All admins of networks tagged..."
         * @const
         */
        "All admins of networks tagged...": "All admins of networks tagged...",
        /**
         * value: "Specific admins..."
         * @const
         */
        "Specific admins...": "Specific admins...",
        /**
         * value: "All admins"
         * @const
         */
        "All admins": "All admins",
        /**
         * value: "All SAML admins"
         * @const
         */
        "All SAML admins": "All SAML admins"    };

}
