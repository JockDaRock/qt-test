/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 September, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MerakiDashboardApi);
  }
}(this, function(expect, MerakiDashboardApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('NetworksnetworkIdcameraqualityRetentionProfilesVideoSettings', function() {
      beforeEach(function() {
        instance = new MerakiDashboardApi.NetworksnetworkIdcameraqualityRetentionProfilesVideoSettings();
      });

      it('should create an instance of NetworksnetworkIdcameraqualityRetentionProfilesVideoSettings', function() {
        // TODO: update the code to test NetworksnetworkIdcameraqualityRetentionProfilesVideoSettings
        expect(instance).to.be.a(MerakiDashboardApi.NetworksnetworkIdcameraqualityRetentionProfilesVideoSettings);
      });

      it('should have the property mV21MV71 (base name: "MV21/MV71")', function() {
        // TODO: update the code to test the property mV21MV71
        expect(instance).to.have.property('mV21MV71');
        // expect(instance.mV21MV71).to.be(expectedValueLiteral);
      });

      it('should have the property mV12MV22MV72 (base name: "MV12/MV22/MV72")', function() {
        // TODO: update the code to test the property mV12MV22MV72
        expect(instance).to.have.property('mV12MV22MV72');
        // expect(instance.mV12MV22MV72).to.be(expectedValueLiteral);
      });

      it('should have the property mV32 (base name: "MV32")', function() {
        // TODO: update the code to test the property mV32
        expect(instance).to.have.property('mV32');
        // expect(instance.mV32).to.be(expectedValueLiteral);
      });

      it('should have the property mV12WE (base name: "MV12WE")', function() {
        // TODO: update the code to test the property mV12WE
        expect(instance).to.have.property('mV12WE');
        // expect(instance.mV12WE).to.be(expectedValueLiteral);
      });

      it('should have the property mV22XMV72X (base name: "MV22X/MV72X")', function() {
        // TODO: update the code to test the property mV22XMV72X
        expect(instance).to.have.property('mV22XMV72X');
        // expect(instance.mV22XMV72X).to.be(expectedValueLiteral);
      });

    });
  });

}));
