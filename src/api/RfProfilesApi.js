/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 September, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CreateNetworkWirelessRfProfile', 'model/UpdateNetworkWirelessRfProfile'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/CreateNetworkWirelessRfProfile'), require('../model/UpdateNetworkWirelessRfProfile'));
  } else {
    // Browser globals (root is window)
    if (!root.MerakiDashboardApi) {
      root.MerakiDashboardApi = {};
    }
    root.MerakiDashboardApi.RfProfilesApi = factory(root.MerakiDashboardApi.ApiClient, root.MerakiDashboardApi.CreateNetworkWirelessRfProfile, root.MerakiDashboardApi.UpdateNetworkWirelessRfProfile);
  }
}(this, function(ApiClient, CreateNetworkWirelessRfProfile, UpdateNetworkWirelessRfProfile) {
  'use strict';

  /**
   * RfProfiles service.
   * @module api/RfProfilesApi
   * @version 1.1.0
   */

  /**
   * Constructs a new RfProfilesApi. 
   * @alias module:api/RfProfilesApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createNetworkWirelessRfProfile operation.
     * @callback module:api/RfProfilesApi~createNetworkWirelessRfProfileCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates new RF profile for this network
     * Creates new RF profile for this network
     * @param {String} networkId 
     * @param {module:model/CreateNetworkWirelessRfProfile} createNetworkWirelessRfProfile 
     * @param {module:api/RfProfilesApi~createNetworkWirelessRfProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.createNetworkWirelessRfProfile = function(networkId, createNetworkWirelessRfProfile, callback) {
      var postBody = createNetworkWirelessRfProfile;

      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling createNetworkWirelessRfProfile");
      }

      // verify the required parameter 'createNetworkWirelessRfProfile' is set
      if (createNetworkWirelessRfProfile === undefined || createNetworkWirelessRfProfile === null) {
        throw new Error("Missing the required parameter 'createNetworkWirelessRfProfile' when calling createNetworkWirelessRfProfile");
      }


      var pathParams = {
        'networkId': networkId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['meraki_api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/wireless/rfProfiles', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteNetworkWirelessRfProfile operation.
     * @callback module:api/RfProfilesApi~deleteNetworkWirelessRfProfileCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a RF Profile
     * Delete a RF Profile
     * @param {String} networkId 
     * @param {String} rfProfileId 
     * @param {module:api/RfProfilesApi~deleteNetworkWirelessRfProfileCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteNetworkWirelessRfProfile = function(networkId, rfProfileId, callback) {
      var postBody = null;

      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling deleteNetworkWirelessRfProfile");
      }

      // verify the required parameter 'rfProfileId' is set
      if (rfProfileId === undefined || rfProfileId === null) {
        throw new Error("Missing the required parameter 'rfProfileId' when calling deleteNetworkWirelessRfProfile");
      }


      var pathParams = {
        'networkId': networkId,
        'rfProfileId': rfProfileId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['meraki_api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/networks/{networkId}/wireless/rfProfiles/{rfProfileId}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkWirelessRfProfile operation.
     * @callback module:api/RfProfilesApi~getNetworkWirelessRfProfileCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a RF profile
     * Return a RF profile
     * @param {String} networkId 
     * @param {String} rfProfileId 
     * @param {module:api/RfProfilesApi~getNetworkWirelessRfProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.getNetworkWirelessRfProfile = function(networkId, rfProfileId, callback) {
      var postBody = null;

      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkWirelessRfProfile");
      }

      // verify the required parameter 'rfProfileId' is set
      if (rfProfileId === undefined || rfProfileId === null) {
        throw new Error("Missing the required parameter 'rfProfileId' when calling getNetworkWirelessRfProfile");
      }


      var pathParams = {
        'networkId': networkId,
        'rfProfileId': rfProfileId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['meraki_api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/wireless/rfProfiles/{rfProfileId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworkWirelessRfProfiles operation.
     * @callback module:api/RfProfilesApi~getNetworkWirelessRfProfilesCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List the non-basic RF profiles for this network
     * List the non-basic RF profiles for this network
     * @param {String} networkId 
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.includeTemplateProfiles     If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template     should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false. 
     * @param {module:api/RfProfilesApi~getNetworkWirelessRfProfilesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.getNetworkWirelessRfProfiles = function(networkId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling getNetworkWirelessRfProfiles");
      }


      var pathParams = {
        'networkId': networkId
      };
      var queryParams = {
        'includeTemplateProfiles': opts['includeTemplateProfiles'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['meraki_api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/wireless/rfProfiles', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNetworkWirelessRfProfile operation.
     * @callback module:api/RfProfilesApi~updateNetworkWirelessRfProfileCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates specified RF profile for this network
     * Updates specified RF profile for this network
     * @param {String} networkId 
     * @param {String} rfProfileId 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateNetworkWirelessRfProfile} opts.updateNetworkWirelessRfProfile 
     * @param {module:api/RfProfilesApi~updateNetworkWirelessRfProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.updateNetworkWirelessRfProfile = function(networkId, rfProfileId, opts, callback) {
      opts = opts || {};
      var postBody = opts['updateNetworkWirelessRfProfile'];

      // verify the required parameter 'networkId' is set
      if (networkId === undefined || networkId === null) {
        throw new Error("Missing the required parameter 'networkId' when calling updateNetworkWirelessRfProfile");
      }

      // verify the required parameter 'rfProfileId' is set
      if (rfProfileId === undefined || rfProfileId === null) {
        throw new Error("Missing the required parameter 'rfProfileId' when calling updateNetworkWirelessRfProfile");
      }


      var pathParams = {
        'networkId': networkId,
        'rfProfileId': rfProfileId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['meraki_api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/networks/{networkId}/wireless/rfProfiles/{rfProfileId}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
