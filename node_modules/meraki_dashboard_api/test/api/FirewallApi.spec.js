/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 August, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MerakiDashboardApi);
  }
}(this, function(expect, MerakiDashboardApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MerakiDashboardApi.FirewallApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FirewallApi', function() {
    describe('getNetworkApplianceFirewallCellularFirewallRules', function() {
      it('should call getNetworkApplianceFirewallCellularFirewallRules successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallCellularFirewallRules
        //instance.getNetworkApplianceFirewallCellularFirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallFirewalledService', function() {
      it('should call getNetworkApplianceFirewallFirewalledService successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallFirewalledService
        //instance.getNetworkApplianceFirewallFirewalledService(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallFirewalledServices', function() {
      it('should call getNetworkApplianceFirewallFirewalledServices successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallFirewalledServices
        //instance.getNetworkApplianceFirewallFirewalledServices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallInboundFirewallRules', function() {
      it('should call getNetworkApplianceFirewallInboundFirewallRules successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallInboundFirewallRules
        //instance.getNetworkApplianceFirewallInboundFirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallL3FirewallRules', function() {
      it('should call getNetworkApplianceFirewallL3FirewallRules successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallL3FirewallRules
        //instance.getNetworkApplianceFirewallL3FirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallL7FirewallRules', function() {
      it('should call getNetworkApplianceFirewallL7FirewallRules successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallL7FirewallRules
        //instance.getNetworkApplianceFirewallL7FirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallL7FirewallRulesApplicationCategories', function() {
      it('should call getNetworkApplianceFirewallL7FirewallRulesApplicationCategories successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallL7FirewallRulesApplicationCategories
        //instance.getNetworkApplianceFirewallL7FirewallRulesApplicationCategories(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallOneToManyNatRules', function() {
      it('should call getNetworkApplianceFirewallOneToManyNatRules successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallOneToManyNatRules
        //instance.getNetworkApplianceFirewallOneToManyNatRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallOneToOneNatRules', function() {
      it('should call getNetworkApplianceFirewallOneToOneNatRules successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallOneToOneNatRules
        //instance.getNetworkApplianceFirewallOneToOneNatRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkApplianceFirewallPortForwardingRules', function() {
      it('should call getNetworkApplianceFirewallPortForwardingRules successfully', function(done) {
        //uncomment below and update the code to test getNetworkApplianceFirewallPortForwardingRules
        //instance.getNetworkApplianceFirewallPortForwardingRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkWirelessSsidFirewallL3FirewallRules', function() {
      it('should call getNetworkWirelessSsidFirewallL3FirewallRules successfully', function(done) {
        //uncomment below and update the code to test getNetworkWirelessSsidFirewallL3FirewallRules
        //instance.getNetworkWirelessSsidFirewallL3FirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNetworkWirelessSsidFirewallL7FirewallRules', function() {
      it('should call getNetworkWirelessSsidFirewallL7FirewallRules successfully', function(done) {
        //uncomment below and update the code to test getNetworkWirelessSsidFirewallL7FirewallRules
        //instance.getNetworkWirelessSsidFirewallL7FirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallCellularFirewallRules', function() {
      it('should call updateNetworkApplianceFirewallCellularFirewallRules successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallCellularFirewallRules
        //instance.updateNetworkApplianceFirewallCellularFirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallFirewalledService', function() {
      it('should call updateNetworkApplianceFirewallFirewalledService successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallFirewalledService
        //instance.updateNetworkApplianceFirewallFirewalledService(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallInboundFirewallRules', function() {
      it('should call updateNetworkApplianceFirewallInboundFirewallRules successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallInboundFirewallRules
        //instance.updateNetworkApplianceFirewallInboundFirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallL3FirewallRules', function() {
      it('should call updateNetworkApplianceFirewallL3FirewallRules successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallL3FirewallRules
        //instance.updateNetworkApplianceFirewallL3FirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallL7FirewallRules', function() {
      it('should call updateNetworkApplianceFirewallL7FirewallRules successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallL7FirewallRules
        //instance.updateNetworkApplianceFirewallL7FirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallOneToManyNatRules', function() {
      it('should call updateNetworkApplianceFirewallOneToManyNatRules successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallOneToManyNatRules
        //instance.updateNetworkApplianceFirewallOneToManyNatRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallOneToOneNatRules', function() {
      it('should call updateNetworkApplianceFirewallOneToOneNatRules successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallOneToOneNatRules
        //instance.updateNetworkApplianceFirewallOneToOneNatRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkApplianceFirewallPortForwardingRules', function() {
      it('should call updateNetworkApplianceFirewallPortForwardingRules successfully', function(done) {
        //uncomment below and update the code to test updateNetworkApplianceFirewallPortForwardingRules
        //instance.updateNetworkApplianceFirewallPortForwardingRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkWirelessSsidFirewallL3FirewallRules', function() {
      it('should call updateNetworkWirelessSsidFirewallL3FirewallRules successfully', function(done) {
        //uncomment below and update the code to test updateNetworkWirelessSsidFirewallL3FirewallRules
        //instance.updateNetworkWirelessSsidFirewallL3FirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNetworkWirelessSsidFirewallL7FirewallRules', function() {
      it('should call updateNetworkWirelessSsidFirewallL7FirewallRules successfully', function(done) {
        //uncomment below and update the code to test updateNetworkWirelessSsidFirewallL7FirewallRules
        //instance.updateNetworkWirelessSsidFirewallL7FirewallRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
