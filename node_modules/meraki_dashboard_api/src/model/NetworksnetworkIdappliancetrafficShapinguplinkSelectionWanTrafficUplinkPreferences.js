/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 August, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NetworksnetworkIdappliancetrafficShapinguplinkSelectionTrafficFilters from './NetworksnetworkIdappliancetrafficShapinguplinkSelectionTrafficFilters';

/**
* The NetworksnetworkIdappliancetrafficShapinguplinkSelectionWanTrafficUplinkPreferences model module.
* @module model/NetworksnetworkIdappliancetrafficShapinguplinkSelectionWanTrafficUplinkPreferences
* @version 1.0.0
*/
export default class NetworksnetworkIdappliancetrafficShapinguplinkSelectionWanTrafficUplinkPreferences {
    /**
    * Constructs a new <code>NetworksnetworkIdappliancetrafficShapinguplinkSelectionWanTrafficUplinkPreferences</code>.
    * @alias module:model/NetworksnetworkIdappliancetrafficShapinguplinkSelectionWanTrafficUplinkPreferences
    * @class
    * @param trafficFilters {Array.<module:model/NetworksnetworkIdappliancetrafficShapinguplinkSelectionTrafficFilters>} Array of traffic filters for this uplink preference rule
    * @param preferredUplink {module:model/NetworksnetworkIdappliancetrafficShapinguplinkSelectionWanTrafficUplinkPreferences.PreferredUplinkEnum} Preferred uplink for this uplink preference rule. Must be one of: 'wan1' or 'wan2'
    */

    constructor(trafficFilters, preferredUplink) {
        
        
        this['trafficFilters'] = trafficFilters;
        this['preferredUplink'] = preferredUplink;
        
    }

    /**
    * Constructs a <code>NetworksnetworkIdappliancetrafficShapinguplinkSelectionWanTrafficUplinkPreferences</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/NetworksnetworkIdappliancetrafficShapinguplinkSelectionWanTrafficUplinkPreferences} obj Optional instance to populate.
    * @return {module:model/NetworksnetworkIdappliancetrafficShapinguplinkSelectionWanTrafficUplinkPreferences} The populated <code>NetworksnetworkIdappliancetrafficShapinguplinkSelectionWanTrafficUplinkPreferences</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworksnetworkIdappliancetrafficShapinguplinkSelectionWanTrafficUplinkPreferences();
                        
            
            if (data.hasOwnProperty('trafficFilters')) {
                obj['trafficFilters'] = ApiClient.convertToType(data['trafficFilters'], [NetworksnetworkIdappliancetrafficShapinguplinkSelectionTrafficFilters]);
            }
            if (data.hasOwnProperty('preferredUplink')) {
                obj['preferredUplink'] = ApiClient.convertToType(data['preferredUplink'], 'String');
            }
        }
        return obj;
    }

    /**
    * Array of traffic filters for this uplink preference rule
    * @member {Array.<module:model/NetworksnetworkIdappliancetrafficShapinguplinkSelectionTrafficFilters>} trafficFilters
    */
    'trafficFilters' = undefined;
    /**
    * Preferred uplink for this uplink preference rule. Must be one of: 'wan1' or 'wan2'
    * @member {module:model/NetworksnetworkIdappliancetrafficShapinguplinkSelectionWanTrafficUplinkPreferences.PreferredUplinkEnum} preferredUplink
    */
    'preferredUplink' = undefined;



    /**
    * Allowed values for the <code>preferredUplink</code> property.
    * @enum {String}
    * @readonly
    */
    static PreferredUplinkEnum = {
        /**
         * value: "wan1"
         * @const
         */
        "wan1": "wan1",
        /**
         * value: "wan2"
         * @const
         */
        "wan2": "wan2"    };

}
