/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 August, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The Body142 model module.
* @module model/Body142
* @version 1.0.0
*/
export default class Body142 {
    /**
    * Constructs a new <code>Body142</code>.
    * @alias module:model/Body142
    * @class
    * @param licenseIdToRenew {String} The ID of the SM license to renew. This license must already be assigned to an SM network
    * @param unusedLicenseId {String} The SM license to use to renew the seats on 'licenseIdToRenew'. This license must have at least as many seats available as there are seats on 'licenseIdToRenew'
    */

    constructor(licenseIdToRenew, unusedLicenseId) {
        
        
        this['licenseIdToRenew'] = licenseIdToRenew;
        this['unusedLicenseId'] = unusedLicenseId;
        
    }

    /**
    * Constructs a <code>Body142</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Body142} obj Optional instance to populate.
    * @return {module:model/Body142} The populated <code>Body142</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Body142();
                        
            
            if (data.hasOwnProperty('licenseIdToRenew')) {
                obj['licenseIdToRenew'] = ApiClient.convertToType(data['licenseIdToRenew'], 'String');
            }
            if (data.hasOwnProperty('unusedLicenseId')) {
                obj['unusedLicenseId'] = ApiClient.convertToType(data['unusedLicenseId'], 'String');
            }
        }
        return obj;
    }

    /**
    * The ID of the SM license to renew. This license must already be assigned to an SM network
    * @member {String} licenseIdToRenew
    */
    'licenseIdToRenew' = undefined;
    /**
    * The SM license to use to renew the seats on 'licenseIdToRenew'. This license must have at least as many seats available as there are seats on 'licenseIdToRenew'
    * @member {String} unusedLicenseId
    */
    'unusedLicenseId' = undefined;




}
