/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 September, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.MerakiDashboardApi) {
      root.MerakiDashboardApi = {};
    }
    root.MerakiDashboardApi.CreateNetworkSwitchQosRule = factory(root.MerakiDashboardApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The CreateNetworkSwitchQosRule model module.
   * @module model/CreateNetworkSwitchQosRule
   * @version 1.1.0
   */

  /**
   * Constructs a new <code>CreateNetworkSwitchQosRule</code>.
   * @alias module:model/CreateNetworkSwitchQosRule
   * @class
   * @param vlan {Number} The VLAN of the incoming packet. A null value will match any VLAN.
   */
  var exports = function(vlan) {
    this.vlan = vlan;
  };

  /**
   * Constructs a <code>CreateNetworkSwitchQosRule</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CreateNetworkSwitchQosRule} obj Optional instance to populate.
   * @return {module:model/CreateNetworkSwitchQosRule} The populated <code>CreateNetworkSwitchQosRule</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('vlan'))
        obj.vlan = ApiClient.convertToType(data['vlan'], 'Number');
      if (data.hasOwnProperty('protocol'))
        obj.protocol = ApiClient.convertToType(data['protocol'], 'String');
      if (data.hasOwnProperty('srcPort'))
        obj.srcPort = ApiClient.convertToType(data['srcPort'], 'Number');
      if (data.hasOwnProperty('srcPortRange'))
        obj.srcPortRange = ApiClient.convertToType(data['srcPortRange'], 'String');
      if (data.hasOwnProperty('dstPort'))
        obj.dstPort = ApiClient.convertToType(data['dstPort'], 'Number');
      if (data.hasOwnProperty('dstPortRange'))
        obj.dstPortRange = ApiClient.convertToType(data['dstPortRange'], 'String');
      if (data.hasOwnProperty('dscp'))
        obj.dscp = ApiClient.convertToType(data['dscp'], 'Number');
    }
    return obj;
  }

  /**
   * The VLAN of the incoming packet. A null value will match any VLAN.
   * @member {Number} vlan
   */
  exports.prototype.vlan = undefined;

  /**
   * The protocol of the incoming packet. Can be one of \"ANY\", \"TCP\" or \"UDP\". Default value is \"ANY\"
   * @member {module:model/CreateNetworkSwitchQosRule.ProtocolEnum} protocol
   */
  exports.prototype.protocol = undefined;

  /**
   * The source port of the incoming packet. Applicable only if protocol is TCP or UDP.
   * @member {Number} srcPort
   */
  exports.prototype.srcPort = undefined;

  /**
   * The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80
   * @member {String} srcPortRange
   */
  exports.prototype.srcPortRange = undefined;

  /**
   * The destination port of the incoming packet. Applicable only if protocol is TCP or UDP.
   * @member {Number} dstPort
   */
  exports.prototype.dstPort = undefined;

  /**
   * The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80
   * @member {String} dstPortRange
   */
  exports.prototype.dstPortRange = undefined;

  /**
   * DSCP tag. Set this to -1 to trust incoming DSCP. Default value is 0
   * @member {Number} dscp
   */
  exports.prototype.dscp = undefined;


  /**
   * Allowed values for the <code>protocol</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ProtocolEnum = {
    /**
     * value: "ANY"
     * @const
     */
    ANY: "ANY",

    /**
     * value: "TCP"
     * @const
     */
    TCP: "TCP",

    /**
     * value: "UDP"
     * @const
     */
    UDP: "UDP"
  };

  return exports;

}));
