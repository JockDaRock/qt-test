/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 August, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The Body2 model module.
* @module model/Body2
* @version 1.0.0
*/
export default class Body2 {
    /**
    * Constructs a new <code>Body2</code>.
    * @alias module:model/Body2
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>Body2</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Body2} obj Optional instance to populate.
    * @return {module:model/Body2} The populated <code>Body2</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Body2();
                        
            
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'String');
            }
            if (data.hasOwnProperty('fullframe')) {
                obj['fullframe'] = ApiClient.convertToType(data['fullframe'], 'Boolean');
            }
        }
        return obj;
    }

    /**
    * [optional] The snapshot will be taken from this time on the camera. The timestamp is expected to be in ISO 8601 format. If no timestamp is specified, we will assume current time.
    * @member {String} timestamp
    */
    'timestamp' = undefined;
    /**
    * [optional] If set to \"true\" the snapshot will be taken at full sensor resolution. This will error if used with timestamp.
    * @member {Boolean} fullframe
    */
    'fullframe' = undefined;




}
