/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 September, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.MerakiDashboardApi) {
      root.MerakiDashboardApi = {};
    }
    root.MerakiDashboardApi.CreateOrganizationNetwork = factory(root.MerakiDashboardApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The CreateOrganizationNetwork model module.
   * @module model/CreateOrganizationNetwork
   * @version 1.1.0
   */

  /**
   * Constructs a new <code>CreateOrganizationNetwork</code>.
   * @alias module:model/CreateOrganizationNetwork
   * @class
   * @param name {String} The name of the new network
   * @param productTypes {Array.<module:model/CreateOrganizationNetwork.ProductTypesEnum>} The product type(s) of the new network. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway. If more than one type is included, the network will be a combined network.
   */
  var exports = function(name, productTypes) {
    this.name = name;
    this.productTypes = productTypes;
  };

  /**
   * Constructs a <code>CreateOrganizationNetwork</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CreateOrganizationNetwork} obj Optional instance to populate.
   * @return {module:model/CreateOrganizationNetwork} The populated <code>CreateOrganizationNetwork</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('productTypes'))
        obj.productTypes = ApiClient.convertToType(data['productTypes'], ['String']);
      if (data.hasOwnProperty('tags'))
        obj.tags = ApiClient.convertToType(data['tags'], ['String']);
      if (data.hasOwnProperty('timeZone'))
        obj.timeZone = ApiClient.convertToType(data['timeZone'], 'String');
      if (data.hasOwnProperty('copyFromNetworkId'))
        obj.copyFromNetworkId = ApiClient.convertToType(data['copyFromNetworkId'], 'String');
    }
    return obj;
  }

  /**
   * The name of the new network
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * The product type(s) of the new network. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway. If more than one type is included, the network will be a combined network.
   * @member {Array.<module:model/CreateOrganizationNetwork.ProductTypesEnum>} productTypes
   */
  exports.prototype.productTypes = undefined;

  /**
   * A list of tags to be applied to the network
   * @member {Array.<String>} tags
   */
  exports.prototype.tags = undefined;

  /**
   * The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>
   * @member {String} timeZone
   */
  exports.prototype.timeZone = undefined;

  /**
   * The ID of the network to copy configuration from. Other provided parameters will override the copied configuration, except type which must match this network's type exactly.
   * @member {String} copyFromNetworkId
   */
  exports.prototype.copyFromNetworkId = undefined;


  /**
   * Allowed values for the <code>productTypes</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ProductTypesEnum = {
    /**
     * value: "wireless"
     * @const
     */
    wireless: "wireless",

    /**
     * value: "appliance"
     * @const
     */
    appliance: "appliance",

    /**
     * value: "switch"
     * @const
     */
    _switch: "switch",

    /**
     * value: "systemsManager"
     * @const
     */
    systemsManager: "systemsManager",

    /**
     * value: "camera"
     * @const
     */
    camera: "camera",

    /**
     * value: "cellularGateway"
     * @const
     */
    cellularGateway: "cellularGateway"
  };

  return exports;

}));
