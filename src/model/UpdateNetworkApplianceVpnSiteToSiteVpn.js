/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 September, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/NetworksnetworkIdappliancevpnsiteToSiteVpnHubs', 'model/NetworksnetworkIdappliancevpnsiteToSiteVpnSubnets'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./NetworksnetworkIdappliancevpnsiteToSiteVpnHubs'), require('./NetworksnetworkIdappliancevpnsiteToSiteVpnSubnets'));
  } else {
    // Browser globals (root is window)
    if (!root.MerakiDashboardApi) {
      root.MerakiDashboardApi = {};
    }
    root.MerakiDashboardApi.UpdateNetworkApplianceVpnSiteToSiteVpn = factory(root.MerakiDashboardApi.ApiClient, root.MerakiDashboardApi.NetworksnetworkIdappliancevpnsiteToSiteVpnHubs, root.MerakiDashboardApi.NetworksnetworkIdappliancevpnsiteToSiteVpnSubnets);
  }
}(this, function(ApiClient, NetworksnetworkIdappliancevpnsiteToSiteVpnHubs, NetworksnetworkIdappliancevpnsiteToSiteVpnSubnets) {
  'use strict';

  /**
   * The UpdateNetworkApplianceVpnSiteToSiteVpn model module.
   * @module model/UpdateNetworkApplianceVpnSiteToSiteVpn
   * @version 1.1.0
   */

  /**
   * Constructs a new <code>UpdateNetworkApplianceVpnSiteToSiteVpn</code>.
   * @alias module:model/UpdateNetworkApplianceVpnSiteToSiteVpn
   * @class
   * @param mode {module:model/UpdateNetworkApplianceVpnSiteToSiteVpn.ModeEnum} The site-to-site VPN mode. Can be one of 'none', 'spoke' or 'hub'
   */
  var exports = function(mode) {
    this.mode = mode;
  };

  /**
   * Constructs a <code>UpdateNetworkApplianceVpnSiteToSiteVpn</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UpdateNetworkApplianceVpnSiteToSiteVpn} obj Optional instance to populate.
   * @return {module:model/UpdateNetworkApplianceVpnSiteToSiteVpn} The populated <code>UpdateNetworkApplianceVpnSiteToSiteVpn</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('mode'))
        obj.mode = ApiClient.convertToType(data['mode'], 'String');
      if (data.hasOwnProperty('hubs'))
        obj.hubs = ApiClient.convertToType(data['hubs'], [NetworksnetworkIdappliancevpnsiteToSiteVpnHubs]);
      if (data.hasOwnProperty('subnets'))
        obj.subnets = ApiClient.convertToType(data['subnets'], [NetworksnetworkIdappliancevpnsiteToSiteVpnSubnets]);
    }
    return obj;
  }

  /**
   * The site-to-site VPN mode. Can be one of 'none', 'spoke' or 'hub'
   * @member {module:model/UpdateNetworkApplianceVpnSiteToSiteVpn.ModeEnum} mode
   */
  exports.prototype.mode = undefined;

  /**
   * The list of VPN hubs, in order of preference. In spoke mode, at least 1 hub is required.
   * @member {Array.<module:model/NetworksnetworkIdappliancevpnsiteToSiteVpnHubs>} hubs
   */
  exports.prototype.hubs = undefined;

  /**
   * The list of subnets and their VPN presence.
   * @member {Array.<module:model/NetworksnetworkIdappliancevpnsiteToSiteVpnSubnets>} subnets
   */
  exports.prototype.subnets = undefined;


  /**
   * Allowed values for the <code>mode</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ModeEnum = {
    /**
     * value: "none"
     * @const
     */
    none: "none",

    /**
     * value: "spoke"
     * @const
     */
    spoke: "spoke",

    /**
     * value: "hub"
     * @const
     */
    hub: "hub"
  };

  return exports;

}));
