/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 August, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DevicesserialswitchroutinginterfacesOspfSettings from './DevicesserialswitchroutinginterfacesOspfSettings';

/**
* The Body96 model module.
* @module model/Body96
* @version 1.0.0
*/
export default class Body96 {
    /**
    * Constructs a new <code>Body96</code>.
    * @alias module:model/Body96
    * @class
    * @param name {String} A friendly name or description for the interface or VLAN.
    * @param subnet {String} The network that this routed interface is on, in CIDR notation (ex. 10.1.1.0/24).
    * @param interfaceIp {String} The IP address this switch stack will use for layer 3 routing on this VLAN or subnet. This cannot be the same as the switch's management IP.
    * @param vlanId {Number} The VLAN this routed interface is on. VLAN must be between 1 and 4094.
    */

    constructor(name, subnet, interfaceIp, vlanId) {
        
        
        this['name'] = name;
        this['subnet'] = subnet;
        this['interfaceIp'] = interfaceIp;
        this['vlanId'] = vlanId;
        
    }

    /**
    * Constructs a <code>Body96</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Body96} obj Optional instance to populate.
    * @return {module:model/Body96} The populated <code>Body96</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Body96();
                        
            
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('subnet')) {
                obj['subnet'] = ApiClient.convertToType(data['subnet'], 'String');
            }
            if (data.hasOwnProperty('interfaceIp')) {
                obj['interfaceIp'] = ApiClient.convertToType(data['interfaceIp'], 'String');
            }
            if (data.hasOwnProperty('multicastRouting')) {
                obj['multicastRouting'] = ApiClient.convertToType(data['multicastRouting'], 'String');
            }
            if (data.hasOwnProperty('vlanId')) {
                obj['vlanId'] = ApiClient.convertToType(data['vlanId'], 'Number');
            }
            if (data.hasOwnProperty('defaultGateway')) {
                obj['defaultGateway'] = ApiClient.convertToType(data['defaultGateway'], 'String');
            }
            if (data.hasOwnProperty('ospfSettings')) {
                obj['ospfSettings'] = DevicesserialswitchroutinginterfacesOspfSettings.constructFromObject(data['ospfSettings']);
            }
        }
        return obj;
    }

    /**
    * A friendly name or description for the interface or VLAN.
    * @member {String} name
    */
    'name' = undefined;
    /**
    * The network that this routed interface is on, in CIDR notation (ex. 10.1.1.0/24).
    * @member {String} subnet
    */
    'subnet' = undefined;
    /**
    * The IP address this switch stack will use for layer 3 routing on this VLAN or subnet. This cannot be the same as the switch's management IP.
    * @member {String} interfaceIp
    */
    'interfaceIp' = undefined;
    /**
    * Enable multicast support if, multicast routing between VLANs is required. Options are, 'disabled', 'enabled' or 'IGMP snooping querier'. Default is 'disabled'.
    * @member {module:model/Body96.MulticastRoutingEnum} multicastRouting
    */
    'multicastRouting' = undefined;
    /**
    * The VLAN this routed interface is on. VLAN must be between 1 and 4094.
    * @member {Number} vlanId
    */
    'vlanId' = undefined;
    /**
    * The next hop for any traffic that isn't going to a directly connected subnet or over a static route. This IP address must exist in a subnet with a routed interface.
    * @member {String} defaultGateway
    */
    'defaultGateway' = undefined;
    /**
    * @member {module:model/DevicesserialswitchroutinginterfacesOspfSettings} ospfSettings
    */
    'ospfSettings' = undefined;



    /**
    * Allowed values for the <code>multicastRouting</code> property.
    * @enum {String}
    * @readonly
    */
    static MulticastRoutingEnum = {
        /**
         * value: "disabled"
         * @const
         */
        "disabled": "disabled",
        /**
         * value: "enabled"
         * @const
         */
        "enabled": "enabled",
        /**
         * value: "IGMP snooping querier"
         * @const
         */
        "IGMP snooping querier": "IGMP snooping querier"    };

}
