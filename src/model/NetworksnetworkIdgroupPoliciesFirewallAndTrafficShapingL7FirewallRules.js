/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 August, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The NetworksnetworkIdgroupPoliciesFirewallAndTrafficShapingL7FirewallRules model module.
* @module model/NetworksnetworkIdgroupPoliciesFirewallAndTrafficShapingL7FirewallRules
* @version 1.0.0
*/
export default class NetworksnetworkIdgroupPoliciesFirewallAndTrafficShapingL7FirewallRules {
    /**
    * Constructs a new <code>NetworksnetworkIdgroupPoliciesFirewallAndTrafficShapingL7FirewallRules</code>.
    * @alias module:model/NetworksnetworkIdgroupPoliciesFirewallAndTrafficShapingL7FirewallRules
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>NetworksnetworkIdgroupPoliciesFirewallAndTrafficShapingL7FirewallRules</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/NetworksnetworkIdgroupPoliciesFirewallAndTrafficShapingL7FirewallRules} obj Optional instance to populate.
    * @return {module:model/NetworksnetworkIdgroupPoliciesFirewallAndTrafficShapingL7FirewallRules} The populated <code>NetworksnetworkIdgroupPoliciesFirewallAndTrafficShapingL7FirewallRules</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworksnetworkIdgroupPoliciesFirewallAndTrafficShapingL7FirewallRules();
                        
            
            if (data.hasOwnProperty('policy')) {
                obj['policy'] = ApiClient.convertToType(data['policy'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
    * The policy applied to matching traffic. Must be 'deny'.
    * @member {module:model/NetworksnetworkIdgroupPoliciesFirewallAndTrafficShapingL7FirewallRules.PolicyEnum} policy
    */
    'policy' = undefined;
    /**
    * Type of the L7 Rule. Must be 'application', 'applicationCategory', 'host', 'port' or 'ipRange'
    * @member {module:model/NetworksnetworkIdgroupPoliciesFirewallAndTrafficShapingL7FirewallRules.TypeEnum} type
    */
    'type' = undefined;
    /**
    * The 'value' of what you want to block. If 'type' is 'host', 'port' or 'ipRange', 'value' must be a string matching either a hostname (e.g. somewhere.com), a port (e.g. 8080), or an IP range (e.g. 192.1.0.0/16). If 'type' is 'application' or 'applicationCategory', then 'value' must be an object with an ID for the application.
    * @member {String} value
    */
    'value' = undefined;



    /**
    * Allowed values for the <code>policy</code> property.
    * @enum {String}
    * @readonly
    */
    static PolicyEnum = {
        /**
         * value: "deny"
         * @const
         */
        "deny": "deny"    };
    /**
    * Allowed values for the <code>type</code> property.
    * @enum {String}
    * @readonly
    */
    static TypeEnum = {
        /**
         * value: "application"
         * @const
         */
        "application": "application",
        /**
         * value: "applicationCategory"
         * @const
         */
        "applicationCategory": "applicationCategory",
        /**
         * value: "host"
         * @const
         */
        "host": "host",
        /**
         * value: "port"
         * @const
         */
        "port": "port",
        /**
         * value: "ipRange"
         * @const
         */
        "ipRange": "ipRange"    };

}
