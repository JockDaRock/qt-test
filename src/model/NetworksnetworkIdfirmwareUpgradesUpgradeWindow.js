/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 September, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.MerakiDashboardApi) {
      root.MerakiDashboardApi = {};
    }
    root.MerakiDashboardApi.NetworksnetworkIdfirmwareUpgradesUpgradeWindow = factory(root.MerakiDashboardApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The NetworksnetworkIdfirmwareUpgradesUpgradeWindow model module.
   * @module model/NetworksnetworkIdfirmwareUpgradesUpgradeWindow
   * @version 1.1.0
   */

  /**
   * Constructs a new <code>NetworksnetworkIdfirmwareUpgradesUpgradeWindow</code>.
   * Upgrade window for devices in network
   * @alias module:model/NetworksnetworkIdfirmwareUpgradesUpgradeWindow
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>NetworksnetworkIdfirmwareUpgradesUpgradeWindow</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/NetworksnetworkIdfirmwareUpgradesUpgradeWindow} obj Optional instance to populate.
   * @return {module:model/NetworksnetworkIdfirmwareUpgradesUpgradeWindow} The populated <code>NetworksnetworkIdfirmwareUpgradesUpgradeWindow</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('dayOfWeek'))
        obj.dayOfWeek = ApiClient.convertToType(data['dayOfWeek'], 'String');
      if (data.hasOwnProperty('hourOfDay'))
        obj.hourOfDay = ApiClient.convertToType(data['hourOfDay'], 'String');
    }
    return obj;
  }

  /**
   * Day of the week
   * @member {module:model/NetworksnetworkIdfirmwareUpgradesUpgradeWindow.DayOfWeekEnum} dayOfWeek
   */
  exports.prototype.dayOfWeek = undefined;

  /**
   * Hour of the day
   * @member {module:model/NetworksnetworkIdfirmwareUpgradesUpgradeWindow.HourOfDayEnum} hourOfDay
   */
  exports.prototype.hourOfDay = undefined;


  /**
   * Allowed values for the <code>dayOfWeek</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DayOfWeekEnum = {
    /**
     * value: "sun"
     * @const
     */
    sun: "sun",

    /**
     * value: "mon"
     * @const
     */
    mon: "mon",

    /**
     * value: "tue"
     * @const
     */
    tue: "tue",

    /**
     * value: "wed"
     * @const
     */
    wed: "wed",

    /**
     * value: "thu"
     * @const
     */
    thu: "thu",

    /**
     * value: "fri"
     * @const
     */
    fri: "fri",

    /**
     * value: "sat"
     * @const
     */
    sat: "sat",

    /**
     * value: "sunday"
     * @const
     */
    sunday: "sunday",

    /**
     * value: "monday"
     * @const
     */
    monday: "monday",

    /**
     * value: "tuesday"
     * @const
     */
    tuesday: "tuesday",

    /**
     * value: "wednesday"
     * @const
     */
    wednesday: "wednesday",

    /**
     * value: "thursday"
     * @const
     */
    thursday: "thursday",

    /**
     * value: "friday"
     * @const
     */
    friday: "friday",

    /**
     * value: "saturday"
     * @const
     */
    saturday: "saturday"
  };


  /**
   * Allowed values for the <code>hourOfDay</code> property.
   * @enum {String}
   * @readonly
   */
  exports.HourOfDayEnum = {
    /**
     * value: "0:00"
     * @const
     */
    _000: "0:00",

    /**
     * value: "1:00"
     * @const
     */
    _100: "1:00",

    /**
     * value: "2:00"
     * @const
     */
    _200: "2:00",

    /**
     * value: "3:00"
     * @const
     */
    _300: "3:00",

    /**
     * value: "4:00"
     * @const
     */
    _400: "4:00",

    /**
     * value: "5:00"
     * @const
     */
    _500: "5:00",

    /**
     * value: "6:00"
     * @const
     */
    _600: "6:00",

    /**
     * value: "7:00"
     * @const
     */
    _700: "7:00",

    /**
     * value: "8:00"
     * @const
     */
    _800: "8:00",

    /**
     * value: "9:00"
     * @const
     */
    _900: "9:00",

    /**
     * value: "10:00"
     * @const
     */
    _1000: "10:00",

    /**
     * value: "11:00"
     * @const
     */
    _1100: "11:00",

    /**
     * value: "12:00"
     * @const
     */
    _1200: "12:00",

    /**
     * value: "13:00"
     * @const
     */
    _1300: "13:00",

    /**
     * value: "14:00"
     * @const
     */
    _1400: "14:00",

    /**
     * value: "15:00"
     * @const
     */
    _1500: "15:00",

    /**
     * value: "16:00"
     * @const
     */
    _1600: "16:00",

    /**
     * value: "17:00"
     * @const
     */
    _1700: "17:00",

    /**
     * value: "18:00"
     * @const
     */
    _1800: "18:00",

    /**
     * value: "19:00"
     * @const
     */
    _1900: "19:00",

    /**
     * value: "20:00"
     * @const
     */
    _2000: "20:00",

    /**
     * value: "21:00"
     * @const
     */
    _2100: "21:00",

    /**
     * value: "22:00"
     * @const
     */
    _2200: "22:00",

    /**
     * value: "23:00"
     * @const
     */
    _2300: "23:00"
  };

  return exports;

}));
