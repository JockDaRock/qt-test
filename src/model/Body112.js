/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 August, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The Body112 model module.
* @module model/Body112
* @version 1.0.0
*/
export default class Body112 {
    /**
    * Constructs a new <code>Body112</code>.
    * @alias module:model/Body112
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>Body112</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Body112} obj Optional instance to populate.
    * @return {module:model/Body112} The populated <code>Body112</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Body112();
                        
            
            if (data.hasOwnProperty('meshingEnabled')) {
                obj['meshingEnabled'] = ApiClient.convertToType(data['meshingEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('ipv6BridgeEnabled')) {
                obj['ipv6BridgeEnabled'] = ApiClient.convertToType(data['ipv6BridgeEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('locationAnalyticsEnabled')) {
                obj['locationAnalyticsEnabled'] = ApiClient.convertToType(data['locationAnalyticsEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('upgradeStrategy')) {
                obj['upgradeStrategy'] = ApiClient.convertToType(data['upgradeStrategy'], 'String');
            }
            if (data.hasOwnProperty('ledLightsOn')) {
                obj['ledLightsOn'] = ApiClient.convertToType(data['ledLightsOn'], 'Boolean');
            }
        }
        return obj;
    }

    /**
    * Toggle for enabling or disabling meshing in a network
    * @member {Boolean} meshingEnabled
    */
    'meshingEnabled' = undefined;
    /**
    * Toggle for enabling or disabling IPv6 bridging in a network (Note: if enabled, SSIDs must also be configured to use bridge mode)
    * @member {Boolean} ipv6BridgeEnabled
    */
    'ipv6BridgeEnabled' = undefined;
    /**
    * Toggle for enabling or disabling location analytics for your network
    * @member {Boolean} locationAnalyticsEnabled
    */
    'locationAnalyticsEnabled' = undefined;
    /**
    * The upgrade strategy to apply to the network. Must be one of 'minimizeUpgradeTime' or 'minimizeClientDowntime'. Requires firmware version MR 26.8 or higher'
    * @member {module:model/Body112.UpgradeStrategyEnum} upgradeStrategy
    */
    'upgradeStrategy' = undefined;
    /**
    * Toggle for enabling or disabling LED lights on all APs in the network (making them run dark)
    * @member {Boolean} ledLightsOn
    */
    'ledLightsOn' = undefined;



    /**
    * Allowed values for the <code>upgradeStrategy</code> property.
    * @enum {String}
    * @readonly
    */
    static UpgradeStrategyEnum = {
        /**
         * value: "minimizeUpgradeTime"
         * @const
         */
        "minimizeUpgradeTime": "minimizeUpgradeTime",
        /**
         * value: "minimizeClientDowntime"
         * @const
         */
        "minimizeClientDowntime": "minimizeClientDowntime"    };

}
