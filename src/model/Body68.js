/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 August, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The Body68 model module.
* @module model/Body68
* @version 1.0.0
*/
export default class Body68 {
    /**
    * Constructs a new <code>Body68</code>.
    * @alias module:model/Body68
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>Body68</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Body68} obj Optional instance to populate.
    * @return {module:model/Body68} The populated <code>Body68</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Body68();
                        
            
            if (data.hasOwnProperty('reportingEnabled')) {
                obj['reportingEnabled'] = ApiClient.convertToType(data['reportingEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('collectorIp')) {
                obj['collectorIp'] = ApiClient.convertToType(data['collectorIp'], 'String');
            }
            if (data.hasOwnProperty('collectorPort')) {
                obj['collectorPort'] = ApiClient.convertToType(data['collectorPort'], 'Number');
            }
        }
        return obj;
    }

    /**
    * Boolean indicating whether NetFlow traffic reporting is enabled (true) or disabled (false).
    * @member {Boolean} reportingEnabled
    */
    'reportingEnabled' = undefined;
    /**
    * The IPv4 address of the NetFlow collector.
    * @member {String} collectorIp
    */
    'collectorIp' = undefined;
    /**
    * The port that the NetFlow collector will be listening on.
    * @member {Number} collectorPort
    */
    'collectorPort' = undefined;




}
