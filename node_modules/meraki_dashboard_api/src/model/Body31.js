/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 August, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The Body31 model module.
* @module model/Body31
* @version 1.0.0
*/
export default class Body31 {
    /**
    * Constructs a new <code>Body31</code>.
    * @alias module:model/Body31
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>Body31</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Body31} obj Optional instance to populate.
    * @return {module:model/Body31} The populated <code>Body31</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Body31();
                        
            
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('dropUntaggedTraffic')) {
                obj['dropUntaggedTraffic'] = ApiClient.convertToType(data['dropUntaggedTraffic'], 'Boolean');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('vlan')) {
                obj['vlan'] = ApiClient.convertToType(data['vlan'], 'Number');
            }
            if (data.hasOwnProperty('allowedVlans')) {
                obj['allowedVlans'] = ApiClient.convertToType(data['allowedVlans'], 'String');
            }
            if (data.hasOwnProperty('accessPolicy')) {
                obj['accessPolicy'] = ApiClient.convertToType(data['accessPolicy'], 'String');
            }
        }
        return obj;
    }

    /**
    * The status of the port
    * @member {Boolean} enabled
    */
    'enabled' = undefined;
    /**
    * Trunk port can Drop all Untagged traffic. When true, no VLAN is required. Access ports cannot have dropUntaggedTraffic set to true.
    * @member {Boolean} dropUntaggedTraffic
    */
    'dropUntaggedTraffic' = undefined;
    /**
    * The type of the port: 'access' or 'trunk'.
    * @member {String} type
    */
    'type' = undefined;
    /**
    * Native VLAN when the port is in Trunk mode. Access VLAN when the port is in Access mode.
    * @member {Number} vlan
    */
    'vlan' = undefined;
    /**
    * Comma-delimited list of the VLAN ID's allowed on the port, or 'all' to permit all VLAN's on the port.
    * @member {String} allowedVlans
    */
    'allowedVlans' = undefined;
    /**
    * The name of the policy. Only applicable to Access ports. Valid values are: 'open', '8021x-radius', 'mac-radius', 'hybris-radius' for MX64 or Z3 or any MX supporting the per port authentication feature. Otherwise, 'open' is the only valid value and 'open' is the default value if the field is missing.
    * @member {String} accessPolicy
    */
    'accessPolicy' = undefined;




}
