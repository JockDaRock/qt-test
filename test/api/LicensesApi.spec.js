/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 September, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MerakiDashboardApi);
  }
}(this, function(expect, MerakiDashboardApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MerakiDashboardApi.LicensesApi();
  });

  describe('(package)', function() {
    describe('LicensesApi', function() {
      describe('assignOrganizationLicensesSeats', function() {
        it('should call assignOrganizationLicensesSeats successfully', function(done) {
          // TODO: uncomment, update parameter values for assignOrganizationLicensesSeats call and complete the assertions
          /*
          var organizationId = "organizationId_example";
          var assignOrganizationLicensesSeats = new MerakiDashboardApi.AssignOrganizationLicensesSeats();
          assignOrganizationLicensesSeats.licenseId = "";
          assignOrganizationLicensesSeats.networkId = "";
          assignOrganizationLicensesSeats.seatCount = 0;

          instance.assignOrganizationLicensesSeats(organizationId, assignOrganizationLicensesSeats, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Object);
            // expect(data).to.be(null);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getOrganizationLicense', function() {
        it('should call getOrganizationLicense successfully', function(done) {
          // TODO: uncomment, update parameter values for getOrganizationLicense call and complete the assertions
          /*
          var organizationId = "organizationId_example";
          var licenseId = "licenseId_example";

          instance.getOrganizationLicense(organizationId, licenseId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Object);
            // expect(data).to.be(null);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getOrganizationLicenses', function() {
        it('should call getOrganizationLicenses successfully', function(done) {
          // TODO: uncomment, update parameter values for getOrganizationLicenses call and complete the assertions
          /*
          var organizationId = "organizationId_example";
          var opts = {};
          opts.perPage = 56;
          opts.startingAfter = "startingAfter_example";
          opts.endingBefore = "endingBefore_example";
          opts.deviceSerial = "deviceSerial_example";
          opts.networkId = "networkId_example";
          opts.state = "state_example";

          instance.getOrganizationLicenses(organizationId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Object);
            // expect(data).to.be(null);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getOrganizationLicensesOverview', function() {
        it('should call getOrganizationLicensesOverview successfully', function(done) {
          // TODO: uncomment, update parameter values for getOrganizationLicensesOverview call and complete the assertions
          /*
          var organizationId = "organizationId_example";

          instance.getOrganizationLicensesOverview(organizationId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Object);
            // expect(data).to.be(null);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('moveOrganizationLicenses', function() {
        it('should call moveOrganizationLicenses successfully', function(done) {
          // TODO: uncomment, update parameter values for moveOrganizationLicenses call and complete the assertions
          /*
          var organizationId = "organizationId_example";
          var moveOrganizationLicenses = new MerakiDashboardApi.MoveOrganizationLicenses();
          moveOrganizationLicenses.destOrganizationId = "";
          moveOrganizationLicenses.licenseIds = [""];

          instance.moveOrganizationLicenses(organizationId, moveOrganizationLicenses, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Object);
            // expect(data).to.be(null);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('moveOrganizationLicensesSeats', function() {
        it('should call moveOrganizationLicensesSeats successfully', function(done) {
          // TODO: uncomment, update parameter values for moveOrganizationLicensesSeats call and complete the assertions
          /*
          var organizationId = "organizationId_example";
          var moveOrganizationLicensesSeats = new MerakiDashboardApi.MoveOrganizationLicensesSeats();
          moveOrganizationLicensesSeats.destOrganizationId = "";
          moveOrganizationLicensesSeats.licenseId = "";
          moveOrganizationLicensesSeats.seatCount = 0;

          instance.moveOrganizationLicensesSeats(organizationId, moveOrganizationLicensesSeats, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Object);
            // expect(data).to.be(null);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('renewOrganizationLicensesSeats', function() {
        it('should call renewOrganizationLicensesSeats successfully', function(done) {
          // TODO: uncomment, update parameter values for renewOrganizationLicensesSeats call and complete the assertions
          /*
          var organizationId = "organizationId_example";
          var renewOrganizationLicensesSeats = new MerakiDashboardApi.RenewOrganizationLicensesSeats();
          renewOrganizationLicensesSeats.licenseIdToRenew = "";
          renewOrganizationLicensesSeats.unusedLicenseId = "";

          instance.renewOrganizationLicensesSeats(organizationId, renewOrganizationLicensesSeats, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Object);
            // expect(data).to.be(null);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('updateOrganizationLicense', function() {
        it('should call updateOrganizationLicense successfully', function(done) {
          // TODO: uncomment, update parameter values for updateOrganizationLicense call and complete the assertions
          /*
          var organizationId = "organizationId_example";
          var licenseId = "licenseId_example";
          var opts = {};
          opts.updateOrganizationLicense = new MerakiDashboardApi.UpdateOrganizationLicense();
          opts.updateOrganizationLicense.deviceSerial = "";

          instance.updateOrganizationLicense(organizationId, licenseId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Object);
            // expect(data).to.be(null);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
