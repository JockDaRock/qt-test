/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 September, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.MerakiDashboardApi) {
      root.MerakiDashboardApi = {};
    }
    root.MerakiDashboardApi.UpdateOrganizationSnmp = factory(root.MerakiDashboardApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The UpdateOrganizationSnmp model module.
   * @module model/UpdateOrganizationSnmp
   * @version 1.1.0
   */

  /**
   * Constructs a new <code>UpdateOrganizationSnmp</code>.
   * @alias module:model/UpdateOrganizationSnmp
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>UpdateOrganizationSnmp</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UpdateOrganizationSnmp} obj Optional instance to populate.
   * @return {module:model/UpdateOrganizationSnmp} The populated <code>UpdateOrganizationSnmp</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('v2cEnabled'))
        obj.v2cEnabled = ApiClient.convertToType(data['v2cEnabled'], 'Boolean');
      if (data.hasOwnProperty('v3Enabled'))
        obj.v3Enabled = ApiClient.convertToType(data['v3Enabled'], 'Boolean');
      if (data.hasOwnProperty('v3AuthMode'))
        obj.v3AuthMode = ApiClient.convertToType(data['v3AuthMode'], 'String');
      if (data.hasOwnProperty('v3AuthPass'))
        obj.v3AuthPass = ApiClient.convertToType(data['v3AuthPass'], 'String');
      if (data.hasOwnProperty('v3PrivMode'))
        obj.v3PrivMode = ApiClient.convertToType(data['v3PrivMode'], 'String');
      if (data.hasOwnProperty('v3PrivPass'))
        obj.v3PrivPass = ApiClient.convertToType(data['v3PrivPass'], 'String');
      if (data.hasOwnProperty('peerIps'))
        obj.peerIps = ApiClient.convertToType(data['peerIps'], ['String']);
    }
    return obj;
  }

  /**
   * Boolean indicating whether SNMP version 2c is enabled for the organization.
   * @member {Boolean} v2cEnabled
   */
  exports.prototype.v2cEnabled = undefined;

  /**
   * Boolean indicating whether SNMP version 3 is enabled for the organization.
   * @member {Boolean} v3Enabled
   */
  exports.prototype.v3Enabled = undefined;

  /**
   * The SNMP version 3 authentication mode. Can be either 'MD5' or 'SHA'.
   * @member {module:model/UpdateOrganizationSnmp.V3AuthModeEnum} v3AuthMode
   */
  exports.prototype.v3AuthMode = undefined;

  /**
   * The SNMP version 3 authentication password. Must be at least 8 characters if specified.
   * @member {String} v3AuthPass
   */
  exports.prototype.v3AuthPass = undefined;

  /**
   * The SNMP version 3 privacy mode. Can be either 'DES' or 'AES128'.
   * @member {module:model/UpdateOrganizationSnmp.V3PrivModeEnum} v3PrivMode
   */
  exports.prototype.v3PrivMode = undefined;

  /**
   * The SNMP version 3 privacy password. Must be at least 8 characters if specified.
   * @member {String} v3PrivPass
   */
  exports.prototype.v3PrivPass = undefined;

  /**
   * The list of IPv4 addresses that are allowed to access the SNMP server.
   * @member {Array.<String>} peerIps
   */
  exports.prototype.peerIps = undefined;


  /**
   * Allowed values for the <code>v3AuthMode</code> property.
   * @enum {String}
   * @readonly
   */
  exports.V3AuthModeEnum = {
    /**
     * value: "MD5"
     * @const
     */
    mD5: "MD5",

    /**
     * value: "SHA"
     * @const
     */
    SHA: "SHA"
  };


  /**
   * Allowed values for the <code>v3PrivMode</code> property.
   * @enum {String}
   * @readonly
   */
  exports.V3PrivModeEnum = {
    /**
     * value: "DES"
     * @const
     */
    DES: "DES",

    /**
     * value: "AES128"
     * @const
     */
    aES128: "AES128"
  };

  return exports;

}));
