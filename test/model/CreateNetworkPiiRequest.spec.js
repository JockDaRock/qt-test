/*
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 September, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MerakiDashboardApi);
  }
}(this, function(expect, MerakiDashboardApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('CreateNetworkPiiRequest', function() {
      beforeEach(function() {
        instance = new MerakiDashboardApi.CreateNetworkPiiRequest();
      });

      it('should create an instance of CreateNetworkPiiRequest', function() {
        // TODO: update the code to test CreateNetworkPiiRequest
        expect(instance).to.be.a(MerakiDashboardApi.CreateNetworkPiiRequest);
      });

      it('should have the property type (base name: "type")', function() {
        // TODO: update the code to test the property type
        expect(instance).to.have.property('type');
        // expect(instance.type).to.be(expectedValueLiteral);
      });

      it('should have the property datasets (base name: "datasets")', function() {
        // TODO: update the code to test the property datasets
        expect(instance).to.have.property('datasets');
        // expect(instance.datasets).to.be(expectedValueLiteral);
      });

      it('should have the property username (base name: "username")', function() {
        // TODO: update the code to test the property username
        expect(instance).to.have.property('username');
        // expect(instance.username).to.be(expectedValueLiteral);
      });

      it('should have the property email (base name: "email")', function() {
        // TODO: update the code to test the property email
        expect(instance).to.have.property('email');
        // expect(instance.email).to.be(expectedValueLiteral);
      });

      it('should have the property mac (base name: "mac")', function() {
        // TODO: update the code to test the property mac
        expect(instance).to.have.property('mac');
        // expect(instance.mac).to.be(expectedValueLiteral);
      });

      it('should have the property smDeviceId (base name: "smDeviceId")', function() {
        // TODO: update the code to test the property smDeviceId
        expect(instance).to.have.property('smDeviceId');
        // expect(instance.smDeviceId).to.be(expectedValueLiteral);
      });

      it('should have the property smUserId (base name: "smUserId")', function() {
        // TODO: update the code to test the property smUserId
        expect(instance).to.have.property('smUserId');
        // expect(instance.smUserId).to.be(expectedValueLiteral);
      });

    });
  });

}));
