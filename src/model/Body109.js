/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 August, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The Body109 model module.
* @module model/Body109
* @version 1.0.0
*/
export default class Body109 {
    /**
    * Constructs a new <code>Body109</code>.
    * @alias module:model/Body109
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>Body109</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Body109} obj Optional instance to populate.
    * @return {module:model/Body109} The populated <code>Body109</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Body109();
                        
            
            if (data.hasOwnProperty('scanningEnabled')) {
                obj['scanningEnabled'] = ApiClient.convertToType(data['scanningEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('advertisingEnabled')) {
                obj['advertisingEnabled'] = ApiClient.convertToType(data['advertisingEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('uuid')) {
                obj['uuid'] = ApiClient.convertToType(data['uuid'], 'String');
            }
            if (data.hasOwnProperty('majorMinorAssignmentMode')) {
                obj['majorMinorAssignmentMode'] = ApiClient.convertToType(data['majorMinorAssignmentMode'], 'String');
            }
            if (data.hasOwnProperty('major')) {
                obj['major'] = ApiClient.convertToType(data['major'], 'Number');
            }
            if (data.hasOwnProperty('minor')) {
                obj['minor'] = ApiClient.convertToType(data['minor'], 'Number');
            }
        }
        return obj;
    }

    /**
    * Whether APs will scan for Bluetooth enabled clients. (true, false)
    * @member {Boolean} scanningEnabled
    */
    'scanningEnabled' = undefined;
    /**
    * Whether APs will advertise beacons. (true, false)
    * @member {Boolean} advertisingEnabled
    */
    'advertisingEnabled' = undefined;
    /**
    * The UUID to be used in the beacon identifier.
    * @member {String} uuid
    */
    'uuid' = undefined;
    /**
    * The way major and minor number should be assigned to nodes in the network. ('Unique', 'Non-unique')
    * @member {module:model/Body109.MajorMinorAssignmentModeEnum} majorMinorAssignmentMode
    */
    'majorMinorAssignmentMode' = undefined;
    /**
    * The major number to be used in the beacon identifier. Only valid in 'Non-unique' mode.
    * @member {Number} major
    */
    'major' = undefined;
    /**
    * The minor number to be used in the beacon identifier. Only valid in 'Non-unique' mode.
    * @member {Number} minor
    */
    'minor' = undefined;



    /**
    * Allowed values for the <code>majorMinorAssignmentMode</code> property.
    * @enum {String}
    * @readonly
    */
    static MajorMinorAssignmentModeEnum = {
        /**
         * value: "Unique"
         * @const
         */
        "Unique": "Unique",
        /**
         * value: "Non-unique"
         * @const
         */
        "Non-unique": "Non-unique"    };

}
