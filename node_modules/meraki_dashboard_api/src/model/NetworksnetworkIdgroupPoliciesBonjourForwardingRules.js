/**
 * Meraki Dashboard API
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 August, 2020 > > [What's New](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The NetworksnetworkIdgroupPoliciesBonjourForwardingRules model module.
* @module model/NetworksnetworkIdgroupPoliciesBonjourForwardingRules
* @version 1.0.0
*/
export default class NetworksnetworkIdgroupPoliciesBonjourForwardingRules {
    /**
    * Constructs a new <code>NetworksnetworkIdgroupPoliciesBonjourForwardingRules</code>.
    * @alias module:model/NetworksnetworkIdgroupPoliciesBonjourForwardingRules
    * @class
    * @param vlanId {String} The ID of the service VLAN. Required.
    * @param services {Array.<module:model/NetworksnetworkIdgroupPoliciesBonjourForwardingRules.ServicesEnum>} A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'
    */

    constructor(vlanId, services) {
        
        
        this['vlanId'] = vlanId;
        this['services'] = services;
        
    }

    /**
    * Constructs a <code>NetworksnetworkIdgroupPoliciesBonjourForwardingRules</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/NetworksnetworkIdgroupPoliciesBonjourForwardingRules} obj Optional instance to populate.
    * @return {module:model/NetworksnetworkIdgroupPoliciesBonjourForwardingRules} The populated <code>NetworksnetworkIdgroupPoliciesBonjourForwardingRules</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworksnetworkIdgroupPoliciesBonjourForwardingRules();
                        
            
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('vlanId')) {
                obj['vlanId'] = ApiClient.convertToType(data['vlanId'], 'String');
            }
            if (data.hasOwnProperty('services')) {
                obj['services'] = ApiClient.convertToType(data['services'], ['String']);
            }
        }
        return obj;
    }

    /**
    * A description for your Bonjour forwarding rule. Optional.
    * @member {String} description
    */
    'description' = undefined;
    /**
    * The ID of the service VLAN. Required.
    * @member {String} vlanId
    */
    'vlanId' = undefined;
    /**
    * A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'
    * @member {Array.<module:model/NetworksnetworkIdgroupPoliciesBonjourForwardingRules.ServicesEnum>} services
    */
    'services' = undefined;



    /**
    * Allowed values for the <code>services</code> property.
    * @enum {String}
    * @readonly
    */
    static ServicesEnum = {
        /**
         * value: "All Services"
         * @const
         */
        "All Services": "All Services",
        /**
         * value: "AirPlay"
         * @const
         */
        "AirPlay": "AirPlay",
        /**
         * value: "AFP"
         * @const
         */
        "AFP": "AFP",
        /**
         * value: "BitTorrent"
         * @const
         */
        "BitTorrent": "BitTorrent",
        /**
         * value: "FTP"
         * @const
         */
        "FTP": "FTP",
        /**
         * value: "iChat"
         * @const
         */
        "iChat": "iChat",
        /**
         * value: "iTunes"
         * @const
         */
        "iTunes": "iTunes",
        /**
         * value: "Printers"
         * @const
         */
        "Printers": "Printers",
        /**
         * value: "Samba"
         * @const
         */
        "Samba": "Samba",
        /**
         * value: "Scanners"
         * @const
         */
        "Scanners": "Scanners",
        /**
         * value: "SSH"
         * @const
         */
        "SSH": "SSH"    };

}
